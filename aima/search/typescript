Script started on Thu 05 Oct 2017 08:42:01 PM EDT
]0;redpocket@redpocket-VirtualBox: ~/Desktop/CIS667/aima/search[01;32mredpocket@redpocket-VirtualBox[00m:[01;34m~/Desktop/CIS667/aima/search[00m$ vim test-search.lisp 
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;50r[?12;25h[?12l[?25h[27m[23m[m[H[2J[?25l[50;1H"test-search.lisp" 82L, 3717C[>c[27m[23m[m[H[2J[1;1H[96m;;; -*- Mode: Lisp; Syntax: Common-Lisp; -*- File: search/test.lisp

;;;; Test Cases for Search[m

[38;5;224m([mdeftest [93msearch[m
  [95m"Test the code for Solving Problems by Searching"
[m  [95m"Start with a trivial version of the missionaries and cannibals puzzle."[m
  [38;5;224m(([m[93msetq[m p1 [38;5;224m([mmake-cannibal-problem[9;14H:initial-state [38;5;224m([mmake-cannibal-state :m1 [95m2[m :c1 [95m1[m[38;5;224m))))[m
  [95m"We search for a solution node:"[m
  [38;5;224m(([m[93msetq[m result [38;5;224m([mbreadth-first-search p1[38;5;224m))[m [93m*[m[38;5;224m)[m
  [95m"We can get information out of that solution:"[m
  [38;5;224m(([msolution-actions result[38;5;224m)[m [93m*[m[38;5;224m)
[m  [38;5;224m(([msolution-nodes result[38;5;224m)[m [93m*[m[38;5;224m)[m
  [95m"Or we can use SOLVE to print the results nicely. By default, SOLVE
  uses A*-search, but you can give it another algorithm as the second arg."[m
  [38;5;224m(([msolve p1[38;5;224m)[m [93m*[m[38;5;224m)[m
  [95m"For the full 3 missionary and 3 cannibal problem, breadth-first-search"
[m  [95m"is very inefficient.  Better to use something that handles repeated states,"
[m  [95m"like A*-search or no-duplicates-breadth-first-search:"[m
  [38;5;224m(([msolve [38;5;224m([mmake-cannibal-problem[38;5;224m)[m [38;5;224m'[m[1m[96mA*-search[m[38;5;224m)[m [93m*[m[38;5;224m)
[m  [38;5;224m(([msolve [38;5;224m([mmake-cannibal-problem[38;5;224m)[m [38;5;224m'[m[1m[96mno-duplicates-breadth-first-search[m[38;5;224m)[m [93m*[m[38;5;224m)[m

  [95m"Here is how to get a problem-solving agent to find the solution,"
[m  [95m"and then go ahead and execute the actions that comprise the solution."[m
  [38;5;224m(([mrun-environment [38;5;224m([mproblem->environment p1[38;5;224m)))[m

  [95m"Now we look at the route-finding domain."
[m  [95m"First, solve the Arad-to-Bucharest problem with A*-search:"[m
  [38;5;224m(([msolve [38;5;224m([mmake-romanian-problem :initial-state [38;5;224m'[m[1m[96mArad[m :goal [38;5;224m'[m[1m[96mBucharest[m[38;5;224m))[m [93m*[m[38;5;224m)[m
  [95m"Now turn it around:"[m
  [38;5;224m(([msolve [38;5;224m([mmake-romanian-problem :goal [38;5;224m'[m[1m[96mArad[m :initial-state [38;5;224m'[m[1m[96mBucharest[m[38;5;224m))[m [93m*[m[38;5;224m)[m
  [95m"Let's just see the actions:"[m
  [38;5;224m(([msolution-actions [38;5;224m([mA*-search [38;5;224m([mmake-romanian-problem[38;5;224m)))
[m   [38;5;224m'([mSibiu Rimnicu Pitesti Bucharest[38;5;224m))[m
  [95m"Now on a random map:"[m
  [38;5;224m(([msolve [38;5;224m([mmake-route-finding-problem[38;5;224m)))[m

  [95m"Here's how to compare several algorithms."[m
  [38;5;224m(([m[93msetq[m searchers [38;5;224m'([mA*-search no-cycles-depth-first-search[41;32Hno-duplicates-breadth-first-search[38;5;224m)))
[m  [38;5;224m(([mcompare-search-algorithms [38;5;121m#'make-route-finding-problem[m searchers[38;5;224m))
[m  [38;5;224m(([mcompare-search-algorithms [38;5;121m#'make-romanian-problem[m searchers :n [95m1[m[38;5;224m))
[m  [38;5;224m(([mcompare-search-algorithms [38;5;121m#'make-cannibal-problem[m[45;31H[38;5;224m'([mno-returns-breadth-first-search A*-search[46;33Hno-duplicates-breadth-first-search[38;5;224m)[m[47;31H:n [95m1[m[38;5;224m))
[m  [38;5;224m(([mcompare-search-algorithms [38;5;121m#'make-romanian-problem[m[49;30H[38;5;224m'([mtree-A*-search A*-search tree-IDA*-search[38;5;224m)[m[50;123H1,1[11CTop"test-search.lisp" 82L, 3717C[93C   [11C   [1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[50;123H2,0-1[9CTop[2;1H[?12l[?25h[?25l[50;123H3,1  [3;1H[?12l[?25h[?25l[50;123H4,0-1[4;1H[?12l[?25h[?25l[50;123H5,1  [5;1H[?12l[?25h[?25l[50;123H6[6;1H[?12l[?25h[?25l[50;123H7[7;1H[?12l[?25h[?25l[50;123H8[8;1H[?12l[?25h[?25l[50;123H9,1-8[9;8H[?12l[?25h[?25l[50;123H10,1 [10;1H[?12l[?25h[?25l[50;124H1[11;1H[?12l[?25h[?25l[50;124H2[12;1H[?12l[?25h[?25l[50;124H3[13;1H[?12l[?25h[?25l[50;124H4[14;1H[?12l[?25h[?25l[50;124H5[15;1H[?12l[?25h[?25l[50;124H6[16;1H[?12l[?25h[?25l[50;124H7[17;1H[?12l[?25h[?25l[50;124H8[18;1H[?12l[?25h[?25l[50;124H9[19;1H[?12l[?25h[?25l[50;123H20[20;1H[?12l[?25h[?25l[50;124H1[21;1H[?12l[?25h[?25l[50;124H2[22;1H[?12l[?25h[?25l[50;124H3,0-1[23;1H[?12l[?25h[?25l[50;124H4,1  [24;1H[?12l[?25h[?25l[50;124H5[25;1H[?12l[?25h[?25l[50;124H6[26;1H[?12l[?25h[?25l[50;124H7,0-1[27;1H[?12l[?25h[?25l[50;124H8,1  [28;1H[?12l[?25h[?25l[50;124H9[29;1H[?12l[?25h[?25l[50;123H30[30;1H[?12l[?25h[?25l[50;124H1[31;1H[?12l[?25h[?25l[50;124H2[32;1H[?12l[?25h[?25l[50;124H3[33;1H[?12l[?25h[?25l[50;124H4[34;1H[?12l[?25h[?25l[50;124H5[35;1H[?12l[?25h[?25l[50;124H6[36;1H[?12l[?25h[?25l[50;124H7[37;1H[?12l[?25h[?25l[50;124H8,0-1[38;1H[?12l[?25h[?25l[50;124H9,1  [39;1H[?12l[?25h[?25l[50;123H40[40;1H[?12l[?25h[?25l[50;124H1,1-8[41;8H[?12l[?25h[?25l[50;124H2,1  [42;1H[?12l[?25h[?25l[50;124H3[43;1H[?12l[?25h[?25l[50;124H4[44;1H[?12l[?25h[?25l[50;124H5,1-8[45;8H[?12l[?25h[?25l[50;124H6[46;8H[?12l[?25h[?25l[50;124H7[47;8H[?12l[?25h[?25l[50;124H8,1  [48;1H[?12l[?25h[?25l[50;124H9,1-8[49;8H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;30H:n [95m1[m[38;5;224m))[m[50;1H[K[50;123H50,1-8[9C3%[49;8H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3H[95m"We'll look at the iterative improvement algorithms on a harder map problem."[m[50;123H[K[50;123H51,1[11C6%[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3H[38;5;224m(([m[93msetq[m searchers [38;5;224m'([mA*-search hill-climbing-search[50;123H[K[50;123H52,1[11C9%[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;32Hsimulated-annealing-search[38;5;224m)))[m[50;123H[K[50;123H53,1-8[8C12%[49;8H[?12l[?25h[?25l[50;124H2,1  [48;1H[?12l[?25h[?25l[50;124H1[47;1H[?12l[?25h[?25l[50;126H2[47;2H[?12l[?25h[?25l[50;126H3[47;3H[?12l[?25h[?25l[50;126H2[47;2H[?12l[?25h[?25l[50;126H1[47;1H[?12l[?25h[?25l[50;126H2[47;2H[?12l[?25h[?25l[50;126H3[47;3H[?12l[?25h[?25l[50;126H2[47;2H[?12l[?25h[?25l[50;126H1[47;1H[?12l[?25h[?25l[50;124H2[48;1H[?12l[?25h[?25l[50;124H3,1-8[49;8H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3H[38;5;224m(([mcompare-search-algorithms #[38;5;224m'([m[93mlambda[m [38;5;224m()[m [38;5;224m([mmake-romanian-problem :goal 'Iasi[38;5;224m))[m[50;123H[K[50;123H54,1[10C15%[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;31Hsearchers :n [95m1[m[38;5;224m))[m[50;123H[K[50;123H55,1-8[8C18%[49;8H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3H[95m"Let's take a look at the 8-puzzle:"[m[50;123H[K[50;123H56,1[10C21%[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3H[38;5;224m(([msolve [38;5;224m([mmake-8-puzzle-problem[38;5;224m))[m [93m*[m[38;5;224m)[m[50;123H[K[50;123H57,1[10C24%[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3H[38;5;224m(([mcompare-search-algorithms [38;5;224m'[m[1m[96mmake-8-puzzle-problem[m [38;5;224m'([mA*-search[38;5;224m)[m :n [95m2[m[38;5;224m))[m[50;123H[K[50;123H58,1[10C27%[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3H[95m"And the path-planning problem among polygonal obstacles:"[m[50;123H[K[50;123H59,1[10C30%[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3H[38;5;224m(([msolve [38;5;224m([mmake-path-planning-problem :scene *scene-4.17*[38;5;224m)))[m[50;123H[K[50;123H60,1[10C33%[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3H[95m"Now the 8-queens problem"[m[50;123H[K[50;123H61,1[10C36%[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3H[38;5;224m(([msolve [38;5;224m([mmake-nqueens-problem[38;5;224m)[m [38;5;224m'[m[1m[96mcsp-backtracking-search[m[38;5;224m)[m [93m*[m[38;5;224m)[m[50;123H[K[50;123H62,1[10C39%[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3H[38;5;224m(([mcompare-search-algorithms[50;123H[K[50;123H63,1[10C42%[49;1H[?12l[?25h[?25l[50;124H2[48;1H[?12l[?25h[?25l[50;124H1[47;1H[?12l[?25h[?25l[50;124H0[46;1H[?12l[?25h[?25l[50;123H59[45;1H[?12l[?25h[?25l[50;124H8[44;1H[?12l[?25h[?25l[50;124H7[43;1H[?12l[?25h[?25l[50;124H6[42;1H[?12l[?25h[?25l[50;124H5,1-8[41;8H[?12l[?25h[?25l[50;124H4,1  [40;1H[?12l[?25h[?25l[50;124H3,1-8[39;8H[?12l[?25h[?25l[50;124H2,1  [38;1H[?12l[?25h[?25l[50;124H1[37;1H[?12l[?25h[?25l[50;124H0,1-8[36;8H[?12l[?25h[?25l[50;124H1,1  [37;1H[?12l[?25h[?25l[50;123H[K[50;1H:[?12l[?25h%[?25l[?12l[?25hs[?25l[?12l[?25h/[?25l[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h/[?25l[?12l[?25h;[?25l[?12l[?25h;[?25l[?12l[?25h/[?25l[?12l[?25hg[?25l[?12l[?25hc[?25l[?12l[?25h[?25l[1;49r[1;1H[9L[1;50r[1;1H[7m  [m[95m"Test the code for Solving Problems by Searching"
[m  [95m"Start with a trivial version of the missionaries and cannibals puzzle."[m
  [38;5;224m(([m[93msetq[m p1 [38;5;224m([mmake-cannibal-problem[4;14H:initial-state [38;5;224m([mmake-cannibal-state :m1 [95m2[m :c1 [95m1[m[38;5;224m))))[m
  [95m"We search for a solution node:"[m
  [38;5;224m(([m[93msetq[m result [38;5;224m([mbreadth-first-search p1[38;5;224m))[m [93m*[m[38;5;224m)[m
  [95m"We can get information out of that solution:"[m
  [38;5;224m(([msolution-actions result[38;5;224m)[m [93m*[m[38;5;224m)
[m  [38;5;224m(([msolution-nodes result[38;5;224m)[m [93m*[m[38;5;224m)[m[50;1H[K[50;123H6,1[11C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H6,1[11C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;1H  
[7m  [m[50;123H7,1[11C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H7,1[11C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[2;1H  
[7m  [m[50;123H8,1[11C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H8,1[11C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[3;1H  [4;9H[7m  [m[50;123H9,2-9[9C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H9,2-9[9C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[4;9H  [7m  [m[50;123H9,4-11[8C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H9,4-11[8C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[4;11H  
[7m  [m[50;123H10,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H10,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[5;1H  
[7m  [m[50;123H11,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H11,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[6;1H  
[7m  [m[50;123H12,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H12,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[7;1H  
[7m  [m[50;123H13,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H13,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[8;1H  
[7m  [m[50;123H14,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H14,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[9;1H  
[7m  [m[50;123H15,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H15,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[10;1H  
[7m[95m  [m[50;123H16,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H16,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[11;1H[95m  [m
[7m  [m[50;123H17,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H17,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[12;1H  
[7m  [m[50;123H18,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H18,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[13;1H  
[7m  [m[50;123H19,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H19,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[14;1H  [21C[7m[95m  [m[50;123H19,24[9C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H19,24[9C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[14;24H[95m  [m
[7m  [m[50;123H20,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H20,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[15;1H  
[7m  [m[50;123H21,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H21,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[16;1H  
[7m  [m[50;123H22,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H22,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[17;1H  

[7m  [m[50;123H24,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H24,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[19;1H  
[7m  [m[50;123H25,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H25,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[20;1H  
[7m  [m[50;123H26,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H26,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[21;1H  

[7m  [m[50;123H28,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H28,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[23;1H  
[7m  [m[50;123H29,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H29,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[24;1H  
[7m  [m[50;123H30,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H30,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[25;1H  
[7m  [m[50;123H31,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H31,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[26;1H  
[7m  [m[50;123H32,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H32,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[27;1H  
[7m  [m[50;123H33,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H33,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[28;1H  
[7m  [m[50;123H34,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H34,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[29;1H  
[7m  [m[50;123H35,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H35,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[30;1H  
[7m  [m[50;123H36,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H36,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[31;1H  
[7m  [m[50;123H37,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H37,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[32;1H  

[7m  [m[50;123H39,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H39,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[34;1H  
[7m  [m[50;123H40,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H40,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[35;1H  [36;25H[7m  [m[50;123H41,4-25[7C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H41,4-25[7C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[36;25H  [7m  [m[50;123H41,6-27[7C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H41,6-27[7C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[36;27H  [7m  [m[50;123H41,8-29[7C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H41,8-29[7C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[36;29H  
[7m  [m[50;123H42,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H42,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[37;1H  
[7m  [m[50;123H43,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H43,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[38;1H  
[7m  [m[50;123H44,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H44,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[39;1H  [40;25H[7m  [m[50;123H45,4-25[7C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H45,4-25[7C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[40;25H  [7m  [m[50;123H45,6-27[7C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H45,6-27[7C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[40;27H  [7m  [m[50;123H45,8-29[7C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H45,8-29[7C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[40;29H  [42;25H[7m  [m[50;123H47,4-25[7C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H47,4-25[7C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[42;25H  [7m  [m[50;123H47,6-27[7C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H47,6-27[7C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[42;27H  [7m  [m[50;123H47,8-29[7C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H47,8-29[7C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[42;29H  
[7m  [m[50;123H48,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H48,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[43;1H  [44;25H[7m  [m[50;123H49,4-25[7C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H49,4-25[7C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[44;25H  [7m  [m[50;123H49,6-27[7C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H49,6-27[7C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[44;27H  [45;25H[7m  [m[50;123H50,4-25[7C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H50,4-25[7C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[45;25H  [7m  [m[50;123H50,6-27[7C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H50,6-27[7C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[45;27H  
[7m  [m[50;123H51,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H51,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[46;1H[96m;;"We'll look at the iterative improvement algorithms on a harder map problem."[m
[7m  [m[50;123H52,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H52,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[47;1H[96m;;((setq searchers '(A*-search hill-climbing-search[m[48;25H[7m  [m[32C[97m[101m))[m[50;123H53,4-25[7C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H53,4-25[7C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[48;25H[96m;;[m[7m[96m  [m[96m   simulated-annealing-search)))[m[50;123H53,6-27[7C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H53,6-27[7C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[48;27H[96m;;[m[7m[96m  [m[50;123H53,8-29[7C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H53,8-29[7C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[48;29H[96m  [m
[7m  [m[50;123H54,1[10C15%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H54,1[10C15%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;1H[96m;;((compare-search-algorithms #'(lambda () (make-romanian-problem :goal 'Iasi))[m[49;25H[7m  [m    searchers :n [95m1[m[38;5;224m)[m[97m[101m)[m[50;123H55,4-25[7C18%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H55,4-25[7C18%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[49;25H[96m;;[m[7m[96m  [m[96m  searchers :n 1))[m[50;123H55,6-27[7C18%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H55,6-27[7C18%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[49;27H[96m  [m[7m[96m  [m[50;123H55,8-29[7C18%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H55,8-29[7C18%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;29H[96m  [m
[7m  [m[95m"Let's take a look at the 8-puzzle:"[m[50;123H56,1[10C21%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H56,1[10C21%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;1H[96m;;"Let's take a look at the 8-puzzle:"[m
[7m  [m[38;5;224m(([msolve [38;5;224m([mmake-8-puzzle-problem[38;5;224m))[m [93m*[m[38;5;224m)[m[50;123H57,1[10C24%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H57,1[10C24%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;1H[96m;;((solve (make-8-puzzle-problem)) *)[m
[7m  [m[38;5;224m(([mcompare-search-algorithms [38;5;224m'[m[1m[96mmake-8-puzzle-problem[m [38;5;224m'([mA*-search[38;5;224m)[m :n [95m2[m[38;5;224m))[m[50;123H58,1[10C27%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H58,1[10C27%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;1H[96m;;((compare-search-algorithms 'make-8-puzzle-problem '(A*-search) :n 2))[m
[7m  [m[95m"And the path-planning problem among polygonal obstacles:"[m[50;123H59,1[10C30%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H59,1[10C30%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;1H[96m;;"And the path-planning problem among polygonal obstacles:"[m
[7m  [m[38;5;224m(([msolve [38;5;224m([mmake-path-planning-problem :scene *scene-4.17*[38;5;224m)))[m[50;123H60,1[10C33%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H60,1[10C33%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;1H[96m;;((solve (make-path-planning-problem :scene *scene-4.17*)))[m
[7m  [m[95m"Now the 8-queens problem"[m[50;123H61,1[10C36%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H61,1[10C36%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;1H[96m;;"Now the 8-queens problem"[m
[7m  [m[38;5;224m(([msolve [38;5;224m([mmake-nqueens-problem[38;5;224m)[m [38;5;224m'[m[1m[96mcsp-backtracking-search[m[38;5;224m)[m [93m*[m[38;5;224m)[m[50;123H62,1[10C39%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H62,1[10C39%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;1H[96m;;((solve (make-nqueens-problem) 'csp-backtracking-search) *)[m
[7m  [m[38;5;224m(([mcompare-search-algorithms[50;123H63,1[10C42%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H63,1[10C42%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;1H[96m;;((compare-search-algorithms[m
[7m  [m  [38;5;224m'[m[1m[96mmake-nqueens-problem[m[50;123H64,1[10C45%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H64,1[10C45%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[49;1H[96m;;[m[7m[96m  [m[96m'make-nqueens-problem[m[50;123H64,3[10C45%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H64,3[10C45%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;3H[96m  [m
[7m  [m  [38;5;224m'([mcsp-backtracking-search csp-forward-checking-search[38;5;224m)[m[50;123H65,1[10C48%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H65,1[10C48%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[49;1H[96m;;[m[7m[96m  [m[96m'(csp-backtracking-search csp-forward-checking-search)[m[50;123H65,3[10C48%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H65,3[10C48%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;3H[96m  [m
[7m  [m  :n [95m1[m[38;5;224m)[m[97m[101m)[m[50;123H66,1[10C51%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H66,1[10C51%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[49;1H[96m;;[m[7m[96m  [m[96m:n 1))[m[50;123H66,3[10C51%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H66,3[10C51%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;3H[96m  [m
[7m  [m[95m"Here is the Travelling Salesperson Problem (TSP)."[m[50;123H67,1[10C54%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H67,1[10C54%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;1H[96m;;"Here is the Travelling Salesperson Problem (TSP)."[m
[7m  [m[38;5;224m(([msolve [38;5;224m([mmake-tsp-problem[38;5;224m)))[m[50;123H68,1[10C57%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H68,1[10C57%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;1H[96m;;((solve (make-tsp-problem)))[m
[7m  [m[38;5;224m(([mcompare-search-algorithms [38;5;224m'[m[1m[96mmake-tsp-problem[m[50;123H69,1[10C60%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H69,1[10C60%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;1H[96m;;((compare-search-algorithms 'make-tsp-problem[m[49;25H[7m  [m   [38;5;224m'([mA*-search greedy-search uniform-cost-search[38;5;224m)[m[50;123H70,4-25[7C63%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H70,4-25[7C63%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[49;25H[96m;;[m[7m[96m  [m[96m '(A*-search greedy-search uniform-cost-search)[m[50;123H70,6-27[7C63%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H70,6-27[7C63%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;27H[96m  [m[49;25H[7m  [m   :n [95m5[m[38;5;224m)[m[97m[101m)[m[50;123H71,4-25[7C66%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H71,4-25[7C66%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[49;25H[96m;;[m[7m[96m  [m[96m :n 5))[m[50;123H71,6-27[7C66%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H71,6-27[7C66%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;27H[96m  [m
[7m  [m[95m"Now we test the environments for 2-player and 3-player games:"[m[50;123H72,1[10C69%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H72,1[10C69%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;1H[96m;;"Now we test the environments for 2-player and 3-player games:"[m
[7m  [m[38;5;224m(([mrun-game [38;5;224m([mmake-ttt-game[38;5;224m)))[m[50;123H73,1[10C72%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H73,1[10C72%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;1H[96m;;((run-game (make-ttt-game)))[m
[7m  [m[38;5;224m(([mrun-game [38;5;224m([mmake-cognac-game :players [38;5;224m'([mX O @[38;5;224m))))[m[50;123H74,1[10C75%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H74,1[10C75%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;1H[96m;;((run-game (make-cognac-game :players '(X O @))))[m
[7m  [m[95m"Now we see that 2x2 tic-tac-toe is a win for the first player, X."[m[50;123H75,1[10C78%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H75,1[10C78%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;1H[96m;;"Now we see that 2x2 tic-tac-toe is a win for the first player, X."[m
[7m  [m[38;5;224m(([mrun-game [38;5;224m([mmake-ttt-game :n [95m2[m[38;5;224m)[m[50;123H76,1[10C81%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H76,1[10C81%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;1H[96m;;((run-game (make-ttt-game :n 2) [m[49;9H[7m  [m   :agents [38;5;224m'([malpha-beta-ttt-agent alpha-beta-ttt-agent[38;5;224m))[m[97m[101m)[m[50;123H77,2-9[8C84%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H77,2-9[8C84%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[49;9H  [7m  [m[50;123H77,4-11[7C84%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H77,4-11[7C84%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;11H[96m;; :agents '(alpha-beta-ttt-agent alpha-beta-ttt-agent)))[m
[7m  [m[95m"In a full 3x3 game, alpha-beta search (playing O) often wins."[m[50;123H78,1[10C87%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H78,1[10C87%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;1H[96m;;"In a full 3x3 game, alpha-beta search (playing O) often wins."[m
[7m  [m[38;5;224m(([mrun-game [38;5;224m([mmake-ttt-game[38;5;224m)[m :agents [38;5;224m'([mrandom-game-agent alpha-beta-ttt-agent[38;5;224m)))[m[50;123H79,1[10C90%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H79,1[10C90%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H[1;49r[49;1H
[1;50r[48;1H[96m;;((run-game (make-ttt-game) :agents '(random-game-agent alpha-beta-ttt-agent)))[m
[7m  [m[38;5;224m)[m[50;123H80,1[10C93%[38;5;121mreplace with ;; (y/n/a/q/l/^E/^Y)?[m[50;123H[K[50;123H80,1[10C93%[50;35H[?12l[?25h[?25l[50;1H[K[50;1H31 substitutions on 30 lines[49;1H[96m;;)[m[50;123H80,1[10C93%[50;123H[K[50;123H80,1[10C93%[49;1H[?12l[?25h[?25l
[1m-- INSERT --[m[50;13H[K[50;123H80,1[10C93%[49;1H[?12l[?25h[?25l[50;126H2[49;2H[?12l[?25h[?25l[50;126H3[49;3H[?12l[?25h[?25l[96m)[m[49;3H[K[50;126H2[49;2H[?12l[?25h[?25l[38;5;224m)[m[49;2H[K[50;126H1[49;1H[?12l[?25h[50;1H[K[49;1H[?25l[50;123H80,1[10C93%[49;1H[?12l[?25h[?25l[50;123H[K[50;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"test-search.lisp" 82L, 3715C written
[?1l>[?12l[?25h[?1049l]0;redpocket@redpocket-VirtualBox: ~/Desktop/CIS667/aima/search[01;32mredpocket@redpocket-VirtualBox[00m:[01;34m~/Desktop/CIS667/aima/search[00m$ vim D[KDo[K[Kdomains/f[Kroute-finding.ls[Kisp 
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;50r[?12;25h[?12l[?25h[27m[23m[m[H[2J[?25l[50;1H"domains/route-finding.lisp" 135L, 5737C[>c[27m[23m[m[H[2J[1;1H[96m;;; -*- Mode: Lisp; Syntax: Common-Lisp; -*- File: search/domains/route-finding

;;;; Find a Route Between Cities on a Map[m

[38;5;224m([mdefstructure [38;5;224m([mroute-finding-problem [38;5;224m([m[38;5;121m:include[m problem[6;48H[38;5;224m([minitial-state [38;5;224m'[m[1m[96mA[m[38;5;224m)[7;48H([mgoal [38;5;224m'[m[1m[96mB[m[38;5;224m)))[m
  [95m"The problem of finding a route from one city to another on a map.
  By default it is a random map.  A state in a route-finding problem is just 
  the name of the current city. Note that a more complicated version of this
  problem would augment the state with considerations of time, gas
  used, wear on car, tolls to pay, etc."[m
  [38;5;224m([m[93mmap[m [38;5;224m([mrandom-route-map[38;5;224m)))

([m[93mdefmethod[m successors [38;5;224m(([mproblem route-finding-problem[38;5;224m)[m city-name[38;5;224m)[m
  [95m"Return a list of (action . new-state) pairs.
  In this case, the action and the new state are both the name of the city."[m
  [38;5;224m([m[93mlet[m [38;5;224m(([mresult [93mnil[m[38;5;224m))
[m   [38;5;224m([mfor each pair in [38;5;224m([mcity-neighbors [38;5;224m([mfind-city city-name problem[38;5;224m))[m [93mdo[m[20;9H[38;5;224m([m[93mpush[m [38;5;224m([m[93mcons[m [38;5;224m([m[93mfirst[m pair[38;5;224m)[m [38;5;224m([m[93mfirst[m pair[38;5;224m))[m result[38;5;224m))[m
   result[38;5;224m))

([m[93mdefmethod[m edge-cost [38;5;224m(([mproblem route-finding-problem[38;5;224m)[m node action city[38;5;224m)[m
  [95m"The edge-cost is the road distance to the next city."[m
  [38;5;224m([mdeclare-ignore action[38;5;224m)
[m  [38;5;224m([mroad-distance [38;5;224m([mfind-city [38;5;224m([mnode-state node[38;5;224m)[m problem[38;5;224m)[m city[38;5;224m))

([m[93mdefmethod[m h-cost [38;5;224m(([mproblem route-finding-problem[38;5;224m)[m city-name[38;5;224m)[m
  [95m"The heuristic cost is the straight-line distance to the goal."[m
  [38;5;224m([mstraight-distance [38;5;224m([mfind-city city-name problem[38;5;224m)[31;22H([mfind-city [38;5;224m([mproblem-goal problem[38;5;224m)[m problem[38;5;224m)))[m

[96m;;;; The City and Map data structures[m

[38;5;224m([m[93mdefstruct[m [38;5;224m([mcity [38;5;224m([m[38;5;121m:type[m [93mlist[m[38;5;224m))[m
  [95m"A city's loc (location) is an (x y) pair.  The neighbors slot holds
  a list of (city-name . distance-along-road) pairs.  Be careful to 
  distinguish between a city name and a city structure."[m
  name loc neighbors[38;5;224m)

([m[93mdefun[m road-distance [38;5;224m([mcity1 city-name2[38;5;224m)[m
  [95m"The distance along the road between two cities.  The first is a city 
  structure, the second just the name of the intended destination."[m
  [38;5;224m([m[93mif[m [38;5;224m([m[93meq[m [38;5;224m([mcity-name city1[38;5;224m)[m city-name2[38;5;224m)[m[45;7H[95m0[m
    [38;5;224m([m[93mcdr[m [38;5;224m([m[93massoc[m city-name2 [38;5;224m([mcity-neighbors city1[38;5;224m)))))

([m[93mdefun[m straight-distance [38;5;224m([mcity1 city2[38;5;224m)[m
  [95m"Distance between two cities on a straight line (as the crow flies)."[m[50;123H1,1[11CTop"domains/route-finding.lisp" 135L, 5737C[82C   [11C   [1;1HP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?12l[?25h[?25l[50;1H[K[50;1H:[?12l[?25h [?25l[121C1,1[11CTop[1;1H[?12l[?25h[?25l[50;123H[K[50;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[50;1H[K[50;1H[?1l>[?12l[?25h[?1049l]0;redpocket@redpocket-VirtualBox: ~/Desktop/CIS667/aima/search[01;32mredpocket@redpocket-VirtualBox[00m:[01;34m~/Desktop/CIS667/aima/search[00m$ cd ..
]0;redpocket@redpocket-VirtualBox: ~/Desktop/CIS667/aima[01;32mredpocket@redpocket-VirtualBox[00m:[01;34m~/Desktop/CIS667/aima[00m$ clisp
  i i i i i i i       ooooo    o        ooooooo   ooooo   ooooo
  I I I I I I I      8     8   8           8     8     o  8    8
  I  \ `+' /  I      8         8           8     8        8    8
   \  `-+-'  /       8         8           8      ooooo   8oooo
    `-__|__-'        8         8           8           8  8
        |            8     o   8           8     o     8  8
  ------+------       ooooo    8oooooo  ooo8ooo   ooooo   8

Welcome to GNU CLISP 2.49 (2010-07-07) <http://clisp.cons.org/>

Copyright (c) Bruno Haible, Michael Stoll 1992, 1993
Copyright (c) Bruno Haible, Marcus Daniels 1994-1997
Copyright (c) Bruno Haible, Pierpaolo Bernardi, Sam Steingold 1998
Copyright (c) Bruno Haible, Sam Steingold 1999-2000
Copyright (c) Sam Steingold, Bruno Haible 2001-2010

Type :h and hit Enter for context help.

[1]> (load '[K"aima.lisp)[K")[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
;; Loading file aima.lisp ...
;;  Loading file /home/redpocket/Desktop/CIS667/aima/utilities/utilities.fas ...
;;  Loaded file /home/redpocket/Desktop/CIS667/aima/utilities/utilities.fas
;;  Loading file /home/redpocket/Desktop/CIS667/aima/utilities/binary-tree.fas ...
;;  Loaded file /home/redpocket/Desktop/CIS667/aima/utilities/binary-tree.fas
;;  Loading file /home/redpocket/Desktop/CIS667/aima/utilities/queue.fas ...
;;  Loaded file /home/redpocket/Desktop/CIS667/aima/utilities/queue.fas
;;  Loading file /home/redpocket/Desktop/CIS667/aima/utilities/cltl2.fas ...
;;  Loaded file /home/redpocket/Desktop/CIS667/aima/utilities/cltl2.fas
;;  Loading file /home/redpocket/Desktop/CIS667/aima/utilities/test-utilities.fas ...
;;  Loaded file /home/redpocket/Desktop/CIS667/aima/utilities/test-utilities.fas
;; Loaded file aima.lisp
T
[2]> continue[K[K[K[K[K[K[K[K(aima-load 'all)[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
;; Loading file /home/redpocket/Desktop/CIS667/aima/agents/test-agents.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/agents/test-agents.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/agents/environments/basic-env.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/agents/environments/basic-env.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/agents/environments/grid-env.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/agents/environments/grid-env.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/agents/environments/vacuum.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/agents/environments/vacuum.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/agents/environments/wumpus.fas ...
** - Continuable Error
DEFUN/DEFMACRO(KILL): #<PACKAGE POSIX> is locked
If you continue (by typing 'continue'): Ignore the lock and proceed
The following restarts are also available:
SKIP           :R1      skip 93 97 (DEFUN KILL (OBJECT) ...)-16
RETRY          :R2      retry 93 97 (DEFUN KILL (OBJECT) ...)-16
STOP           :R3      stop loading file /home/redpocket/Desktop/CIS667/aima/agents/environments/wumpus.fas
ABORT          :R4      Abort main loop
Break 1 [3]> continue
WARNING: DEFUN/DEFMACRO: redefining function KILL in /home/redpocket/Desktop/CIS667/aima/agents/environments/wumpus.fas, was defined in C
;; Loaded file /home/redpocket/Desktop/CIS667/aima/agents/environments/wumpus.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/agents/agents/agent.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/agents/agents/agent.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/agents/agents/vacuum.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/agents/agents/vacuum.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/agents/agents/wumpus.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/agents/agents/wumpus.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/agents/algorithms/grid.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/agents/algorithms/grid.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/test-search.lisp ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/test-search.lisp
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/algorithms/problems.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/algorithms/problems.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/algorithms/simple.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/algorithms/simple.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/algorithms/repeated.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/algorithms/repeated.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/algorithms/csp.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/algorithms/csp.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/algorithms/ida.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/algorithms/ida.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/algorithms/iterative.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/algorithms/iterative.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/algorithms/sma.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/algorithms/sma.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/algorithms/minimax.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/algorithms/minimax.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/environments/games.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/environments/games.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/environments/prob-solve.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/environments/prob-solve.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/domains/cannibals.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/domains/cannibals.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/domains/ttt.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/domains/ttt.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/domains/cognac.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/domains/cognac.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/domains/nqueens.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/domains/nqueens.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/domains/path-planning.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/domains/path-planning.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/domains/puzzle8.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/domains/puzzle8.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/domains/route-finding.lisp ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/domains/route-finding.lisp
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/domains/tsp.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/domains/tsp.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/domains/vacuum.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/domains/vacuum.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/agents/ps-agents.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/agents/ps-agents.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/agents/ttt-agent.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/agents/ttt-agent.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/logic/test-logic.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/logic/test-logic.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/tell-ask.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/tell-ask.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/unify.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/unify.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/normal.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/normal.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/prop.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/prop.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/horn.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/horn.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/fol.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/fol.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/infix.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/infix.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/logic/environments/shopping.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/logic/environments/shopping.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/uncertainty/test-uncertainty.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/uncertainty/test-uncertainty.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/uncertainty/agents/mdp-agent.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/uncertainty/agents/mdp-agent.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/uncertainty/domains/mdp.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/uncertainty/domains/mdp.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/uncertainty/domains/4x3-mdp.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/uncertainty/domains/4x3-mdp.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/uncertainty/environments/mdp.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/uncertainty/environments/mdp.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/uncertainty/algorithms/dp.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/uncertainty/algorithms/dp.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/uncertainty/algorithms/stats.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/uncertainty/algorithms/stats.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/test-learning.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/test-learning.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/inductive-learning.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/inductive-learning.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/learning-curves.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/learning-curves.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/dtl.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/dtl.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/dll.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/dll.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/nn.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/nn.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/perceptron.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/perceptron.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/multilayer.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/multilayer.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/q-iteration.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/q-iteration.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/domains/restaurant-multivalued.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/domains/restaurant-multivalued.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/domains/restaurant-real.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/domains/restaurant-real.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/domains/restaurant-boolean.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/domains/restaurant-boolean.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/domains/majority-boolean.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/domains/majority-boolean.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/domains/ex-19-4-boolean.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/domains/ex-19-4-boolean.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/domains/and-boolean.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/domains/and-boolean.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/domains/xor-boolean.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/domains/xor-boolean.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/domains/4x3-passive-mdp.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/domains/4x3-passive-mdp.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/agents/passive-lms-learner.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/agents/passive-lms-learner.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/agents/passive-adp-learner.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/agents/passive-adp-learner.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/agents/passive-td-learner.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/agents/passive-td-learner.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/agents/active-adp-learner.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/agents/active-adp-learner.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/agents/active-qi-learner.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/agents/active-qi-learner.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/agents/exploring-adp-learner.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/agents/exploring-adp-learner.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/agents/exploring-tdq-learner.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/agents/exploring-tdq-learner.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/language/test-language.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/language/test-language.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/language/algorithms/chart-parse.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/language/algorithms/chart-parse.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/language/domains/grammars.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/language/domains/grammars.fas
T
[4]> (test 'search)[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
Testing System SEARCH
;;; Test the code for Solving Problems by Searching
;;; Start with a trivial version of the missionaries and cannibals puzzle.
> (SETQ P1 (MAKE-CANNIBAL-PROBLEM :INITIAL-STATE (MAKE-CANNIBAL-STATE :M1 2 :C1 1)))
#<a CANNIBAL-PROBLEM>
;;; We search for a solution node:
> (SETQ RESULT (BREADTH-FIRST-SEARCH P1))
#<NODE f(3) = g(3) + h(0) state:(0 0 0 2 1 1)>
;;; We can get information out of that solution:
> (SOLUTION-ACTIONS RESULT)
((2 0 1) (-1 0 -1) (1 1 1))
> (SOLUTION-NODES RESULT)
(#<NODE f(0) = g(0) + h(0) state:(2 1 1 0 0 0)> #<NODE f(1) = g(1) + h(0) state:(0 1 0 2 0 1)>
 #<NODE f(2) = g(2) + h(0) state:(1 1 1 1 0 0)> #<NODE f(3) = g(3) + h(0) state:(0 0 0 2 1 1)>)
;;; 
Or we can use SOLVE to print the results nicely. By default, SOLVE
  uses A*-search, but you can give it another algorithm as the second arg.
> (SOLVE P1)
Action               State
======               =====
                     (2 1 1 0 0 0)
(1 1 1)              (1 0 0 1 1 1)
(-1 0 -1)            (2 0 1 0 1 0)
(2 0 1)              (0 0 0 2 1 1)
======               =====
Total of 7 nodes expanded.
#<NODE f(3) = g(3) + h(0) state:(0 0 0 2 1 1)>
;;; For the full 3 missionary and 3 cannibal problem, breadth-first-search
;;; is very inefficient.  Better to use something that handles repeated states,
;;; like A*-search or no-duplicates-breadth-first-search:
> (SOLVE (MAKE-CANNIBAL-PROBLEM) 'A*-SEARCH)
Action               State
======               =====
                     (3 3 1 0 0 0)
(1 1 1)              (2 2 0 1 1 1)
(-1 0 -1)            (3 2 1 0 1 0)
(0 2 1)              (3 0 0 0 3 1)
(0 -1 -1)            (3 1 1 0 2 0)
(2 0 1)              (1 1 0 2 2 1)
(-1 -1 -1)           (2 2 1 1 1 0)
(2 0 1)              (0 2 0 3 1 1)
(0 -1 -1)            (0 3 1 3 0 0)
(0 2 1)              (0 1 0 3 2 1)
(0 -1 -1)            (0 2 1 3 1 0)
(0 2 1)              (0 0 0 3 3 1)
======               =====
Total of 14 nodes expanded.
#<NODE f(11) = g(11) + h(0) state:(0 0 0 3 3 1)>
> (SOLVE (MAKE-CANNIBAL-PROBLEM) 'NO-DUPLICATES-BREADTH-FIRST-SEARCH)
Action               State
======               =====
                     (3 3 1 0 0 0)
(1 1 1)              (2 2 0 1 1 1)
(-1 0 -1)            (3 2 1 0 1 0)
(0 2 1)              (3 0 0 0 3 1)
(0 -1 -1)            (3 1 1 0 2 0)
(2 0 1)              (1 1 0 2 2 1)
(-1 -1 -1)           (2 2 1 1 1 0)
(2 0 1)              (0 2 0 3 1 1)
(0 -1 -1)            (0 3 1 3 0 0)
(0 2 1)              (0 1 0 3 2 1)
(0 -1 -1)            (0 2 1 3 1 0)
(0 2 1)              (0 0 0 3 3 1)
======               =====
Total of 14 nodes expanded.
#<NODE f(11) = g(11) + h(0) state:(0 0 0 3 3 1)>
;;; Here is how to get a problem-solving agent to find the solution,
;;; and then go ahead and execute the actions that comprise the solution.
> (RUN-ENVIRONMENT (PROBLEM->ENVIRONMENT P1))
At Time step 0:

#<PROBLEM-SOLVING-ENVIRONMENT; State: (2 1 1 0 0 0)> 
At Time step 1:
Agent [AGENT-BODY> = 0] perceives (2 1 1 0 0 0)
      and does (1 1 1)

#<PROBLEM-SOLVING-ENVIRONMENT; State: (1 0 0 1 1 1)> 
At Time step 2:
Agent [AGENT-BODY> = 0] perceives (1 0 0 1 1 1)
      and does (-1 0 -1)

#<PROBLEM-SOLVING-ENVIRONMENT; State: (2 0 1 0 1 0)> 
At Time step 3:
Agent [AGENT-BODY> = 1] perceives (2 0 1 0 1 0)
      and does (2 0 1)

#<PROBLEM-SOLVING-ENVIRONMENT; State: (0 0 0 2 1 1)> 
#<PROBLEM-SOLVING-ENVIRONMENT; State: (0 0 0 2 1 1)>
;;; Now we look at the route-finding domain.
;;; First, solve the Arad-to-Bucharest problem with A*-search:
> (SOLVE (MAKE-ROMANIAN-PROBLEM :INITIAL-STATE 'ARAD :GOAL 'BUCHAREST))
Action               State
======               =====
                     ARAD
SIBIU                SIBIU
RIMNICU              RIMNICU
PITESTI              PITESTI
BUCHAREST            BUCHAREST
======               =====
Total of 4 nodes expanded.
#<NODE f(474) = g(418) + h(0) state:BUCHAREST>
;;; Now turn it around:
> (SOLVE (MAKE-ROMANIAN-PROBLEM :GOAL 'ARAD :INITIAL-STATE 'BUCHAREST))
Action               State
======               =====
                     BUCHAREST
PITESTI              PITESTI
RIMNICU              RIMNICU
SIBIU                SIBIU
ARAD                 ARAD
======               =====
Total of 4 nodes expanded.
#<NODE f(474) = g(418) + h(0) state:ARAD>
;;; Let's just see the actions:
> (SOLUTION-ACTIONS (A*-SEARCH (MAKE-ROMANIAN-PROBLEM)))
(SIBIU RIMNICU PITESTI BUCHAREST)
;;; Now on a random map:
> (SOLVE (MAKE-ROUTE-FINDING-PROBLEM))
Action               State
======               =====
                     A
J                    J
D                    D
F                    F
B                    B
======               =====
Total of 5 nodes expanded.
#<NODE f(116) = g(116) + h(0) state:B>
;;; Here's how to compare several algorithms.
> (SETQ SEARCHERS '(A*-SEARCH NO-CYCLES-DEPTH-FIRST-SEARCH NO-DUPLICATES-BREADTH-FIRST-SEARCH))
(A*-SEARCH NO-CYCLES-DEPTH-FIRST-SEARCH NO-DUPLICATES-BREADTH-FIRST-SEARCH)
> (COMPARE-SEARCH-ALGORITHMS #'MAKE-ROUTE-FINDING-PROBLEM SEARCHERS)
Solved  Cost  Length  Nodes  Algorithm
====== ====== ====== ======= =========
   10    95.7    2.1     2.7 A*-SEARCH
   10   184.6    3.0     3.0 NO-CYCLES-DEPTH-FIRST-SEARCH
   10   106.3    1.8     5.4 NO-DUPLICATES-BREADTH-FIRST-SEARCH
NIL
> (COMPARE-SEARCH-ALGORITHMS #'MAKE-ROMANIAN-PROBLEM SEARCHERS :N 1)
Solved  Cost  Length  Nodes  Algorithm
====== ====== ====== ======= =========
    1   418.0    4.0     4.0 A*-SEARCH
    1   607.0    5.0     5.0 NO-CYCLES-DEPTH-FIRST-SEARCH
    1   450.0    3.0    11.0 NO-DUPLICATES-BREADTH-FIRST-SEARCH
NIL
> (COMPARE-SEARCH-ALGORITHMS #'MAKE-CANNIBAL-PROBLEM '(NO-RETURNS-BREADTH-FIRST-SEARCH A*-SEARCH NO-DUPLICATES-BREADTH-FIRST-SEARCH) :N 1)
Solved  Cost  Length  Nodes  Algorithm
====== ====== ====== ======= =========
    1    11.0   11.0    55.0 NO-RETURNS-BREADTH-FIRST-SEARCH
    1    11.0   11.0    14.0 A*-SEARCH
    1    11.0   11.0    14.0 NO-DUPLICATES-BREADTH-FIRST-SEARCH
NIL
> (COMPARE-SEARCH-ALGORITHMS #'MAKE-ROMANIAN-PROBLEM '(TREE-A*-SEARCH A*-SEARCH TREE-IDA*-SEARCH) :N 1)
Solved  Cost  Length  Nodes  Algorithm
====== ====== ====== ======= =========
    1   418.0    4.0     4.0 TREE-A*-SEARCH
    1   418.0    4.0     4.0 A*-SEARCH
    1   450.0    3.0     3.0 TREE-IDA*-SEARCH
NIL

 0 errors on system SEARCH
0
[5]> e[K
Bye.
]0;redpocket@redpocket-VirtualBox: ~/Desktop/CIS667/aima[01;32mredpocket@redpocket-VirtualBox[00m:[01;34m~/Desktop/CIS667/aima[00m$ clispd ..vim domains/route-finding.lisp [10Ptest-search[C[C[C[C[C[C[10@domains/route-finding[C[C[C[C[C[Ccd ..[Klisp[Kclisp
  i i i i i i i       ooooo    o        ooooooo   ooooo   ooooo
  I I I I I I I      8     8   8           8     8     o  8    8
  I  \ `+' /  I      8         8           8     8        8    8
   \  `-+-'  /       8         8           8      ooooo   8oooo
    `-__|__-'        8         8           8           8  8
        |            8     o   8           8     o     8  8
  ------+------       ooooo    8oooooo  ooo8ooo   ooooo   8

Welcome to GNU CLISP 2.49 (2010-07-07) <http://clisp.cons.org/>

Copyright (c) Bruno Haible, Michael Stoll 1992, 1993
Copyright (c) Bruno Haible, Marcus Daniels 1994-1997
Copyright (c) Bruno Haible, Pierpaolo Bernardi, Sam Steingold 1998
Copyright (c) Bruno Haible, Sam Steingold 1999-2000
Copyright (c) Sam Steingold, Bruno Haible 2001-2010

Type :h and hit Enter for context help.

[1]> (load "aims[Ka.lisp")[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
;; Loading file aima.lisp ...
;;  Loading file /home/redpocket/Desktop/CIS667/aima/utilities/utilities.fas ...
;;  Loaded file /home/redpocket/Desktop/CIS667/aima/utilities/utilities.fas
;;  Loading file /home/redpocket/Desktop/CIS667/aima/utilities/binary-tree.fas ...
;;  Loaded file /home/redpocket/Desktop/CIS667/aima/utilities/binary-tree.fas
;;  Loading file /home/redpocket/Desktop/CIS667/aima/utilities/queue.fas ...
;;  Loaded file /home/redpocket/Desktop/CIS667/aima/utilities/queue.fas
;;  Loading file /home/redpocket/Desktop/CIS667/aima/utilities/cltl2.fas ...
;;  Loaded file /home/redpocket/Desktop/CIS667/aima/utilities/cltl2.fas
;;  Loading file /home/redpocket/Desktop/CIS667/aima/utilities/test-utilities.fas ...
;;  Loaded file /home/redpocket/Desktop/CIS667/aima/utilities/test-utilities.fas
;; Loaded file aima.lisp
T
[2]> (aima-load 'all)[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
;; Loading file /home/redpocket/Desktop/CIS667/aima/agents/test-agents.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/agents/test-agents.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/agents/environments/basic-env.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/agents/environments/basic-env.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/agents/environments/grid-env.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/agents/environments/grid-env.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/agents/environments/vacuum.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/agents/environments/vacuum.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/agents/environments/wumpus.fas ...
** - Continuable Error
DEFUN/DEFMACRO(KILL): #<PACKAGE POSIX> is locked
If you continue (by typing 'continue'): Ignore the lock and proceed
The following restarts are also available:
SKIP           :R1      skip 93 97 (DEFUN KILL (OBJECT) ...)-16
RETRY          :R2      retry 93 97 (DEFUN KILL (OBJECT) ...)-16
STOP           :R3      stop loading file /home/redpocket/Desktop/CIS667/aima/agents/environments/wumpus.fas
ABORT          :R4      Abort main loop
Break 1 [3]> continue
WARNING: DEFUN/DEFMACRO: redefining function KILL in /home/redpocket/Desktop/CIS667/aima/agents/environments/wumpus.fas, was defined in C
;; Loaded file /home/redpocket/Desktop/CIS667/aima/agents/environments/wumpus.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/agents/agents/agent.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/agents/agents/agent.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/agents/agents/vacuum.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/agents/agents/vacuum.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/agents/agents/wumpus.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/agents/agents/wumpus.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/agents/algorithms/grid.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/agents/algorithms/grid.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/test-search.lisp ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/test-search.lisp
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/algorithms/problems.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/algorithms/problems.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/algorithms/simple.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/algorithms/simple.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/algorithms/repeated.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/algorithms/repeated.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/algorithms/csp.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/algorithms/csp.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/algorithms/ida.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/algorithms/ida.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/algorithms/iterative.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/algorithms/iterative.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/algorithms/sma.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/algorithms/sma.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/algorithms/minimax.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/algorithms/minimax.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/environments/games.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/environments/games.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/environments/prob-solve.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/environments/prob-solve.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/domains/cannibals.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/domains/cannibals.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/domains/ttt.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/domains/ttt.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/domains/cognac.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/domains/cognac.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/domains/nqueens.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/domains/nqueens.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/domains/path-planning.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/domains/path-planning.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/domains/puzzle8.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/domains/puzzle8.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/domains/route-finding.lisp ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/domains/route-finding.lisp
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/domains/tsp.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/domains/tsp.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/domains/vacuum.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/domains/vacuum.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/agents/ps-agents.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/agents/ps-agents.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/search/agents/ttt-agent.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/search/agents/ttt-agent.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/logic/test-logic.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/logic/test-logic.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/tell-ask.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/tell-ask.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/unify.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/unify.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/normal.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/normal.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/prop.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/prop.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/horn.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/horn.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/fol.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/fol.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/infix.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/logic/algorithms/infix.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/logic/environments/shopping.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/logic/environments/shopping.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/uncertainty/test-uncertainty.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/uncertainty/test-uncertainty.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/uncertainty/agents/mdp-agent.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/uncertainty/agents/mdp-agent.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/uncertainty/domains/mdp.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/uncertainty/domains/mdp.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/uncertainty/domains/4x3-mdp.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/uncertainty/domains/4x3-mdp.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/uncertainty/environments/mdp.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/uncertainty/environments/mdp.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/uncertainty/algorithms/dp.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/uncertainty/algorithms/dp.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/uncertainty/algorithms/stats.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/uncertainty/algorithms/stats.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/test-learning.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/test-learning.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/inductive-learning.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/inductive-learning.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/learning-curves.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/learning-curves.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/dtl.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/dtl.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/dll.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/dll.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/nn.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/nn.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/perceptron.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/perceptron.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/multilayer.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/multilayer.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/q-iteration.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/algorithms/q-iteration.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/domains/restaurant-multivalued.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/domains/restaurant-multivalued.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/domains/restaurant-real.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/domains/restaurant-real.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/domains/restaurant-boolean.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/domains/restaurant-boolean.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/domains/majority-boolean.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/domains/majority-boolean.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/domains/ex-19-4-boolean.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/domains/ex-19-4-boolean.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/domains/and-boolean.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/domains/and-boolean.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/domains/xor-boolean.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/domains/xor-boolean.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/domains/4x3-passive-mdp.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/domains/4x3-passive-mdp.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/agents/passive-lms-learner.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/agents/passive-lms-learner.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/agents/passive-adp-learner.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/agents/passive-adp-learner.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/agents/passive-td-learner.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/agents/passive-td-learner.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/agents/active-adp-learner.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/agents/active-adp-learner.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/agents/active-qi-learner.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/agents/active-qi-learner.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/agents/exploring-adp-learner.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/agents/exploring-adp-learner.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/learning/agents/exploring-tdq-learner.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/learning/agents/exploring-tdq-learner.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/language/test-language.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/language/test-language.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/language/algorithms/chart-parse.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/language/algorithms/chart-parse.fas
;; Loading file /home/redpocket/Desktop/CIS667/aima/language/domains/grammars.fas ...
;; Loaded file /home/redpocket/Desktop/CIS667/aima/language/domains/grammars.fas
T
[4]> te[K[K(test sear[K[K[K[K'search)[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
Testing System SEARCH
;;; Test the code for Solving Problems by Searching
;;; Start with a trivial version of the missionaries and cannibals puzzle.
> (SETQ P1 (MAKE-CANNIBAL-PROBLEM :INITIAL-STATE (MAKE-CANNIBAL-STATE :M1 2 :C1 1)))
#<a CANNIBAL-PROBLEM>
;;; We search for a solution node:
> (SETQ RESULT (BREADTH-FIRST-SEARCH P1))
#<NODE f(3) = g(3) + h(0) state:(0 0 0 2 1 1)>
;;; We can get information out of that solution:
> (SOLUTION-ACTIONS RESULT)
((2 0 1) (-1 0 -1) (1 1 1))
> (SOLUTION-NODES RESULT)
(#<NODE f(0) = g(0) + h(0) state:(2 1 1 0 0 0)> #<NODE f(1) = g(1) + h(0) state:(0 1 0 2 0 1)>
 #<NODE f(2) = g(2) + h(0) state:(1 1 1 1 0 0)> #<NODE f(3) = g(3) + h(0) state:(0 0 0 2 1 1)>)
;;; 
Or we can use SOLVE to print the results nicely. By default, SOLVE
  uses A*-search, but you can give it another algorithm as the second arg.
> (SOLVE P1)
Action               State
======               =====
                     (2 1 1 0 0 0)
(1 1 1)              (1 0 0 1 1 1)
(-1 0 -1)            (2 0 1 0 1 0)
(2 0 1)              (0 0 0 2 1 1)
======               =====
Total of 7 nodes expanded.
#<NODE f(3) = g(3) + h(0) state:(0 0 0 2 1 1)>
;;; For the full 3 missionary and 3 cannibal problem, breadth-first-search
;;; is very inefficient.  Better to use something that handles repeated states,
;;; like A*-search or no-duplicates-breadth-first-search:
> (SOLVE (MAKE-CANNIBAL-PROBLEM) 'A*-SEARCH)
Action               State
======               =====
                     (3 3 1 0 0 0)
(1 1 1)              (2 2 0 1 1 1)
(-1 0 -1)            (3 2 1 0 1 0)
(0 2 1)              (3 0 0 0 3 1)
(0 -1 -1)            (3 1 1 0 2 0)
(2 0 1)              (1 1 0 2 2 1)
(-1 -1 -1)           (2 2 1 1 1 0)
(2 0 1)              (0 2 0 3 1 1)
(0 -1 -1)            (0 3 1 3 0 0)
(0 2 1)              (0 1 0 3 2 1)
(0 -1 -1)            (0 2 1 3 1 0)
(0 2 1)              (0 0 0 3 3 1)
======               =====
Total of 14 nodes expanded.
#<NODE f(11) = g(11) + h(0) state:(0 0 0 3 3 1)>
> (SOLVE (MAKE-CANNIBAL-PROBLEM) 'NO-DUPLICATES-BREADTH-FIRST-SEARCH)
Action               State
======               =====
                     (3 3 1 0 0 0)
(1 1 1)              (2 2 0 1 1 1)
(-1 0 -1)            (3 2 1 0 1 0)
(0 2 1)              (3 0 0 0 3 1)
(0 -1 -1)            (3 1 1 0 2 0)
(2 0 1)              (1 1 0 2 2 1)
(-1 -1 -1)           (2 2 1 1 1 0)
(2 0 1)              (0 2 0 3 1 1)
(0 -1 -1)            (0 3 1 3 0 0)
(0 2 1)              (0 1 0 3 2 1)
(0 -1 -1)            (0 2 1 3 1 0)
(0 2 1)              (0 0 0 3 3 1)
======               =====
Total of 14 nodes expanded.
#<NODE f(11) = g(11) + h(0) state:(0 0 0 3 3 1)>
;;; Here is how to get a problem-solving agent to find the solution,
;;; and then go ahead and execute the actions that comprise the solution.
> (RUN-ENVIRONMENT (PROBLEM->ENVIRONMENT P1))
At Time step 0:

#<PROBLEM-SOLVING-ENVIRONMENT; State: (2 1 1 0 0 0)> 
At Time step 1:
Agent [AGENT-BODY> = 0] perceives (2 1 1 0 0 0)
      and does (1 1 1)

#<PROBLEM-SOLVING-ENVIRONMENT; State: (1 0 0 1 1 1)> 
At Time step 2:
Agent [AGENT-BODY> = 0] perceives (1 0 0 1 1 1)
      and does (-1 0 -1)

#<PROBLEM-SOLVING-ENVIRONMENT; State: (2 0 1 0 1 0)> 
At Time step 3:
Agent [AGENT-BODY> = 1] perceives (2 0 1 0 1 0)
      and does (2 0 1)

#<PROBLEM-SOLVING-ENVIRONMENT; State: (0 0 0 2 1 1)> 
#<PROBLEM-SOLVING-ENVIRONMENT; State: (0 0 0 2 1 1)>
;;; Now we look at the route-finding domain.
;;; First, solve the Arad-to-Bucharest problem with A*-search:
> (SOLVE (MAKE-ROMANIAN-PROBLEM :INITIAL-STATE 'ARAD :GOAL 'BUCHAREST))
Action               State
======               =====
                     ARAD
SIBIU                SIBIU
RIMNICU              RIMNICU
PITESTI              PITESTI
BUCHAREST            BUCHAREST
======               =====
Total of 7 nodes expanded.
#<NODE f(418) = g(418) + h(0) state:BUCHAREST>
;;; Now turn it around:
> (SOLVE (MAKE-ROMANIAN-PROBLEM :GOAL 'ARAD :INITIAL-STATE 'BUCHAREST))
Action               State
======               =====
                     BUCHAREST
PITESTI              PITESTI
RIMNICU              RIMNICU
SIBIU                SIBIU
ARAD                 ARAD
======               =====
Total of 5 nodes expanded.
#<NODE f(418) = g(418) + h(0) state:ARAD>
;;; Let's just see the actions:
> (SOLUTION-ACTIONS (A*-SEARCH (MAKE-ROMANIAN-PROBLEM)))
(SIBIU RIMNICU PITESTI BUCHAREST)
;;; Now on a random map:
> (SOLVE (MAKE-ROUTE-FINDING-PROBLEM))
Action               State
======               =====
                     A
D                    D
F                    F
B                    B
======               =====
Total of 5 nodes expanded.
#<NODE f(102) = g(102) + h(0) state:B>
;;; Here's how to compare several algorithms.
> (SETQ SEARCHERS '(A*-SEARCH NO-CYCLES-DEPTH-FIRST-SEARCH NO-DUPLICATES-BREADTH-FIRST-SEARCH))
(A*-SEARCH NO-CYCLES-DEPTH-FIRST-SEARCH NO-DUPLICATES-BREADTH-FIRST-SEARCH)
> (COMPARE-SEARCH-ALGORITHMS #'MAKE-ROUTE-FINDING-PROBLEM SEARCHERS)
Solved  Cost  Length  Nodes  Algorithm
====== ====== ====== ======= =========
   10    81.0    2.1     3.3 A*-SEARCH
   10   185.5    3.9     3.9 NO-CYCLES-DEPTH-FIRST-SEARCH
   10    90.6    2.0     6.5 NO-DUPLICATES-BREADTH-FIRST-SEARCH
NIL
> (COMPARE-SEARCH-ALGORITHMS #'MAKE-ROMANIAN-PROBLEM SEARCHERS :N 1)
Solved  Cost  Length  Nodes  Algorithm
====== ====== ====== ======= =========
    1   418.0    4.0     7.0 A*-SEARCH
    1   607.0    5.0     5.0 NO-CYCLES-DEPTH-FIRST-SEARCH
    1   450.0    3.0    11.0 NO-DUPLICATES-BREADTH-FIRST-SEARCH
NIL
> (COMPARE-SEARCH-ALGORITHMS #'MAKE-CANNIBAL-PROBLEM '(NO-RETURNS-BREADTH-FIRST-SEARCH A*-SEARCH NO-DUPLICATES-BREADTH-FIRST-SEARCH) :N 1)
Solved  Cost  Length  Nodes  Algorithm
====== ====== ====== ======= =========
    1    11.0   11.0    55.0 NO-RETURNS-BREADTH-FIRST-SEARCH
    1    11.0   11.0    14.0 A*-SEARCH
    1    11.0   11.0    14.0 NO-DUPLICATES-BREADTH-FIRST-SEARCH
NIL
> (COMPARE-SEARCH-ALGORITHMS #'MAKE-ROMANIAN-PROBLEM '(TREE-A*-SEARCH A*-SEARCH TREE-IDA*-SEARCH) :N 1)
Solved  Cost  Length  Nodes  Algorithm
====== ====== ====== ======= =========
    1   418.0    4.0     7.0 TREE-A*-SEARCH
    1   418.0    4.0     7.0 A*-SEARCH
    1   418.0    4.0    35.0 TREE-IDA*-SEARCH
NIL

 0 errors on system SEARCH
0
[5]> 
Bye.
]0;redpocket@redpocket-VirtualBox: ~/Desktop/CIS667/aima[01;32mredpocket@redpocket-VirtualBox[00m:[01;34m~/Desktop/CIS667/aima[00m$ exit
exit

Script done on Thu 05 Oct 2017 09:03:37 PM EDT
