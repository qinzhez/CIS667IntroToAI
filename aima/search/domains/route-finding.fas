(|SYSTEM|::|VERSION| '(20080430.))
#0Y_ #0Y |CHARSET|::|UTF-8|
#Y(#:|1 13 (DEFSTRUCTURE (ROUTE-FINDING-PROBLEM #) "The problem of finding a route from one city to another on a map.\n
  By default it is a random map.  A state in a route-finding problem is just \n
  the name of the current city. Note that a more complicated version of this\n
  problem would augment the state with considerations of time, gas\n
  used, wear on car, tolls to pay, etc." ...)-1-1|
   #18Y(00 00 00 00 00 00 00 00 20 01 DA DB DC 32 A2 3E 19 01)
   (|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| :|SUPERTYPE|
    |COMMON-LISP-USER|::|PROBLEM|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|1 13 (DEFSTRUCTURE (ROUTE-FINDING-PROBLEM #) "The problem of finding a route from one city to another on a map.\n
  By default it is a random map.  A state in a route-finding problem is just \n
  the name of the current city. Note that a more complicated version of this\n
  problem would augment the state with considerations of time, gas\n
  used, wear on car, tolls to pay, etc." ...)-1-2|
   #738Y(00 00 00 00 00 00 00 00 20 01 00 2B 01 DA DB DC 38 01 72 9E 2F 03 5D
         0B 00 00 DE DA 2F 05 DA E0 32 A3 DA 68 02 00 E1 63 E2 E3 6B 0A E5 E6
         E7 E8 E9 64 EA EB EC ED EE 6F 15 70 16 F1 F2 F3 F4 F5 63 6E 11 1C 6B
         0A E5 F7 E7 65 1E E9 64 EA EB EC 65 1F 65 20 6F 15 70 16 F1 65 21 F3
         65 22 F5 63 6E 11 1C 6B 0A E5 65 23 E7 65 24 E9 64 EA EB EC 65 25 DB
         65 23 70 26 70 16 F1 65 27 F3 65 28 F5 63 6E 11 1C 6B 0A E5 65 29 E7
         65 2A E9 64 EA EB EC 63 DB 65 29 70 26 70 16 F1 65 2B F3 65 2C F5 63
         6E 11 1C 6B 0A E5 65 2D E7 65 2E E9 64 EA EB EC 65 2F C1 70 16 F1 65
         30 F3 65 31 F5 63 6E 11 1C 7B 05 6B 32 E5 E6 E7 E8 E9 64 EA EB EC ED
         EE 6F 15 70 16 F1 65 33 65 34 63 65 35 63 6E 11 36 6B 32 E5 F7 E7 65
         1E E9 64 EA EB EC 65 1F 65 20 6F 15 70 16 F1 65 37 65 34 63 65 35 63
         6E 11 36 6B 32 E5 65 2D E7 65 2E E9 64 EA EB EC 65 2F C0 70 16 F1 65
         38 65 34 65 39 65 35 65 3A 6E 11 36 7B 03 2D 08 3B E1 2F 3C E1 AE 6D
         3D 01 32 9C 16 02 65 3E 31 62 E3 2F 3C E3 65 3F 65 40 32 A2 E3 65 41
         32 9C 65 42 31 62 E2 2F 3C E2 65 3F 65 43 32 A2 E2 65 44 32 9C 65 45
         31 62 65 46 31 62 65 47 2F 3C 65 47 65 3F 65 48 32 A2 65 47 65 49 32
         9C 65 47 65 4A DA 32 A2 65 4B 31 62 65 4C 31 62 65 4D 2F 3C 65 4D 65
         3F 65 4E 32 A2 65 4D 65 4F 32 9C 65 4D 65 4A DA 32 A2 65 50 31 62 65
         51 31 62 65 52 2F 3C 65 52 65 3F 65 53 32 A2 65 52 65 54 32 9C 65 52
         65 4A DA 32 A2 65 55 31 62 65 56 31 62 65 57 2F 3C 65 57 65 3F 65 58
         32 A2 65 57 65 59 32 9C 65 57 65 4A DA 32 A2 65 5A 31 62 65 5B 31 62
         65 5C 2F 3C 65 5C 65 3F 65 5D 32 A2 65 5C 65 5E 32 9C 65 5C 65 4A DA
         32 A2 65 5F 31 62 65 60 31 62 65 61 2F 3C 65 61 65 3F 65 62 32 A2 65
         61 65 63 32 9C 65 47 65 64 DA 32 A2 65 65 31 62 65 66 31 62 65 67 2F
         3C 65 67 65 3F 65 68 32 A2 65 67 65 69 32 9C 65 4D 65 64 DA 32 A2 65
         6A 31 62 65 6B 31 62 65 6C 2F 3C 65 6C 65 3F 65 6D 32 A2 65 6C 65 6E
         32 9C 65 52 65 64 DA 32 A2 65 6F 31 62 65 70 31 62 65 71 2F 3C 65 71
         65 3F 65 72 32 A2 65 71 65 73 32 9C 65 57 65 64 DA 32 A2 65 74 31 62
         65 75 31 62 65 76 2F 3C 65 76 65 3F 65 77 32 A2 65 76 65 78 32 9C 65
         5C 65 64 DA 32 A2 DA 65 79 65 7A 2D 03 7B 65 7C 65 7D 38 01 8F 9E 04
         65 7C 2F 7E 65 7C 65 7F 65 80 80 63 65 80 81 65 80 82 65 80 83 65 80
         84 65 80 85 DA 38 02 72 3A 64 38 02 72 3A 7B 02 7B 08 2D 03 80 86 C5
         19 01)
   (|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| |COMMON-LISP-USER|::|PROBLEM|
    |CLOS|::|CLOSCLASS| |CLOS|::|CLASS-NAMES|
    #Y(|COMMON-LISP-USER|::|DEFAULT-MAP|
       #14Y(00 00 00 00 00 00 00 00 26 01 2E 00 19 01)
       (|COMMON-LISP-USER|::|RANDOM-ROUTE-MAP|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|) ()
       |COMMON-LISP|::|NIL| 1)
    |SYSTEM|::|STRUCTURE-UNDEFINE-ACCESSORIES|
    |SYSTEM|::|DEFSTRUCT-DESCRIPTION|
    |COMMON-LISP-USER|::|MAKE-ROUTE-FINDING-PROBLEM|
    |COMMON-LISP-USER|::|COPY-ROUTE-FINDING-PROBLEM|
    |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-P|
    |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
    |COMMON-LISP-USER|::|INITIAL-STATE| :|INITARGS| (:|INITIAL-STATE|) :|TYPE|
    :|ALLOCATION| :|INSTANCE| |CLOS|::|INHERITABLE-INITER|
    #1='|COMMON-LISP-USER|::|A| |COMMON-LISP-USER|::|A|
    |SYSTEM|::|MAKE-CONSTANT-INITFUNCTION|
    |CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| |CLOS|::|INHERITABLE-DOC|
    (|COMMON-LISP|::|NIL|) |CLOS|::|LOCATION| 1. |CLOS|::|READONLY|
    |CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
    |COMMON-LISP-USER|::|GOAL| (:|GOAL|) #2='|COMMON-LISP-USER|::|B|
    |COMMON-LISP-USER|::|B| (|COMMON-LISP|::|NIL|) 2.
    |COMMON-LISP-USER|::|NUM-EXPANDED| (:|NUM-EXPANDED|) 0.
    |SYSTEM|::|FIND-STRUCTURE-CLASS-SLOT-INITFUNCTION| (|COMMON-LISP|::|NIL|)
    3. |COMMON-LISP-USER|::|ITERATIVE?| (:|ITERATIVE?|) (|COMMON-LISP|::|NIL|)
    4. |COMMON-LISP|::|MAP| (:|MAP|)
    #3=(|COMMON-LISP-USER|::|RANDOM-ROUTE-MAP|) (|COMMON-LISP|::|NIL|) 5.
    |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| (|COMMON-LISP|::|NIL|)
    :|READERS| :|WRITERS|
    |CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
    (|COMMON-LISP|::|NIL|) (|COMMON-LISP|::|NIL|)
    (|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-MAP|)
    ((|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-MAP|))
    |CLOS|::|DEFINE-STRUCTURE-CLASS| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|COMMON-LISP-USER|::|MAKE-ROUTE-FINDING-PROBLEM|
       #76Y(00 00 00 00 00 00 00 00 A6 1B 05 00 01 00 3B 05 02 CB FD 3B 04 02
            CC FC 3B 03 02 CD FB 3D 02 3B 01 03 2E 09 F9 69 00 01 E4 72 45 E5
            AD E6 B5 32 44 E5 AD E7 B4 32 44 E5 AD E8 B3 32 44 E5 AD E9 B2 32
            44 E5 AD EA B1 32 44 15 19 06)
       (|COMMON-LISP|::|NIL| :|INITIAL-STATE| :|GOAL| :|NUM-EXPANDED|
        :|ITERATIVE?| :|MAP| |COMMON-LISP-USER|::|A| |COMMON-LISP-USER|::|B| 0.
        |COMMON-LISP-USER|::|RANDOM-ROUTE-MAP| 6.
        |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| 1. 2. 3. 4. 5.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|COMMON-LISP|::|&KEY| (#:|INITIAL-STATE| #1#) (#:|GOAL| #2#)
        (#:|NUM-EXPANDED| 0.) (#:|ITERATIVE?| |COMMON-LISP|::|NIL|)
        (#:|MAP| #3#))
       |COMMON-LISP|::|NIL| 1)
    (|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-P|)
    |SYSTEM|::|INLINE-EXPANSION|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-P|))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-P|
      (|SYSTEM|::|%STRUCTURE-TYPE-P|
       '|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| |SYSTEM|::|OBJECT|)))
    #Y(|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-P|
       #16Y(00 00 00 00 01 00 00 00 20 02 DA AE 32 47 19 02)
       (|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|COPY-ROUTE-FINDING-PROBLEM|)
    ((|COMMON-LISP|::|STRUCTURE|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |COMMON-LISP-USER|::|COPY-ROUTE-FINDING-PROBLEM|))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|COPY-ROUTE-FINDING-PROBLEM|
      (|COMMON-LISP|::|COPY-STRUCTURE| |COMMON-LISP|::|STRUCTURE|)))
    #Y(|COMMON-LISP-USER|::|COPY-ROUTE-FINDING-PROBLEM|
       #15Y(00 00 00 00 01 00 00 00 26 02 AD 32 46 19 02) ()
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|)
       (|COMMON-LISP|::|STRUCTURE|) |COMMON-LISP|::|NIL| 1)
    (|COMMON-LISP|::|FUNCTION|
     |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-INITIAL-STATE|
     (|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-INITIAL-STATE|)
    |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-INITIAL-STATE|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-INITIAL-STATE|))
     (|COMMON-LISP|::|BLOCK|
      |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-INITIAL-STATE|
      (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
       (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|
        |SYSTEM|::|OBJECT| 1.))))
    #Y(|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-INITIAL-STATE|
       #17Y(00 00 00 00 01 00 00 00 20 02 DA AE DB 32 43 19 02)
       (|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| 1.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    |SYSTEM|::|DEFSTRUCT-READER|
    (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-GOAL|
     (|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-GOAL|)
    |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-GOAL|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-GOAL|))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-GOAL|
      (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
       (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|
        |SYSTEM|::|OBJECT| 2.))))
    #Y(|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-GOAL|
       #17Y(00 00 00 00 01 00 00 00 20 02 DA AE DB 32 43 19 02)
       (|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| 2.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|FUNCTION|
     |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-NUM-EXPANDED|
     (|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-NUM-EXPANDED|)
    |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-NUM-EXPANDED|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-NUM-EXPANDED|))
     (|COMMON-LISP|::|BLOCK|
      |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-NUM-EXPANDED|
      (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
       (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|
        |SYSTEM|::|OBJECT| 3.))))
    #Y(|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-NUM-EXPANDED|
       #17Y(00 00 00 00 01 00 00 00 20 02 DA AE DB 32 43 19 02)
       (|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| 3.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|FUNCTION|
     |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-ITERATIVE?|
     (|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-ITERATIVE?|)
    |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-ITERATIVE?|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-ITERATIVE?|))
     (|COMMON-LISP|::|BLOCK|
      |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-ITERATIVE?|
      (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
       (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|
        |SYSTEM|::|OBJECT| 4.))))
    #Y(|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-ITERATIVE?|
       #17Y(00 00 00 00 01 00 00 00 20 02 DA AE DB 32 43 19 02)
       (|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| 4.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-MAP|
     (|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-MAP|)
    |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-MAP|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-MAP|))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-MAP|
      (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
       (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|
        |SYSTEM|::|OBJECT| 5.))))
    #Y(|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-MAP|
       #17Y(00 00 00 00 01 00 00 00 20 02 DA AE DB 32 43 19 02)
       (|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| 5.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|FUNCTION|
     (|COMMON-LISP|::|SETF|
      |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-INITIAL-STATE|)
     (|COMMON-LISP|::|T| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|)
     |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     (|COMMON-LISP|::|SETF|
      |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-INITIAL-STATE|))
    #.(|SYSTEM|::|GET-SETF-SYMBOL|
       '|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-INITIAL-STATE|)
    ((|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       #4=(|COMMON-LISP|::|SETF|
           |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-INITIAL-STATE|)))
     (|COMMON-LISP|::|BLOCK|
      |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-INITIAL-STATE|
      (|SYSTEM|::|%STRUCTURE-STORE|
       '|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| |SYSTEM|::|OBJECT| 1.
       |SYSTEM|::|VALUE|)))
    #Y(#4# #18Y(00 00 00 00 02 00 00 00 20 03 DA AE DB B1 32 44 19 03)
       (|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| 1.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
    |SYSTEM|::|DEFSTRUCT-WRITER|
    (|COMMON-LISP|::|FUNCTION|
     (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-GOAL|)
     (|COMMON-LISP|::|T| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|)
     |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-GOAL|))
    #.(|SYSTEM|::|GET-SETF-SYMBOL|
       '|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-GOAL|)
    ((|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       #5=(|COMMON-LISP|::|SETF|
           |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-GOAL|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-GOAL|
      (|SYSTEM|::|%STRUCTURE-STORE|
       '|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| |SYSTEM|::|OBJECT| 2.
       |SYSTEM|::|VALUE|)))
    #Y(#5# #18Y(00 00 00 00 02 00 00 00 20 03 DA AE DB B1 32 44 19 03)
       (|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| 2.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
    (|COMMON-LISP|::|FUNCTION|
     (|COMMON-LISP|::|SETF|
      |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-NUM-EXPANDED|)
     (|COMMON-LISP|::|T| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|)
     |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     (|COMMON-LISP|::|SETF|
      |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-NUM-EXPANDED|))
    #.(|SYSTEM|::|GET-SETF-SYMBOL|
       '|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-NUM-EXPANDED|)
    ((|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       #6=(|COMMON-LISP|::|SETF|
           |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-NUM-EXPANDED|)))
     (|COMMON-LISP|::|BLOCK|
      |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-NUM-EXPANDED|
      (|SYSTEM|::|%STRUCTURE-STORE|
       '|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| |SYSTEM|::|OBJECT| 3.
       |SYSTEM|::|VALUE|)))
    #Y(#6# #18Y(00 00 00 00 02 00 00 00 20 03 DA AE DB B1 32 44 19 03)
       (|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| 3.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
    (|COMMON-LISP|::|FUNCTION|
     (|COMMON-LISP|::|SETF|
      |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-ITERATIVE?|)
     (|COMMON-LISP|::|T| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|)
     |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     (|COMMON-LISP|::|SETF|
      |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-ITERATIVE?|))
    #.(|SYSTEM|::|GET-SETF-SYMBOL|
       '|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-ITERATIVE?|)
    ((|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       #7=(|COMMON-LISP|::|SETF|
           |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-ITERATIVE?|)))
     (|COMMON-LISP|::|BLOCK|
      |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-ITERATIVE?|
      (|SYSTEM|::|%STRUCTURE-STORE|
       '|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| |SYSTEM|::|OBJECT| 4.
       |SYSTEM|::|VALUE|)))
    #Y(#7# #18Y(00 00 00 00 02 00 00 00 20 03 DA AE DB B1 32 44 19 03)
       (|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| 4.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
    (|COMMON-LISP|::|FUNCTION|
     (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-MAP|)
     (|COMMON-LISP|::|T| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|)
     |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-MAP|))
    #.(|SYSTEM|::|GET-SETF-SYMBOL|
       '|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-MAP|)
    ((|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       #8=(|COMMON-LISP|::|SETF|
           |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-MAP|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM-MAP|
      (|SYSTEM|::|%STRUCTURE-STORE|
       '|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| |SYSTEM|::|OBJECT| 5.
       |SYSTEM|::|VALUE|)))
    #Y(#8# #18Y(00 00 00 00 02 00 00 00 20 03 DA AE DB B1 32 44 19 03)
       (|COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| 5.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
    |COMMON-LISP|::|TYPE|
    "The problem of finding a route from one city to another on a map.\n
  By default it is a random map.  A state in a route-finding problem is just \n
  the name of the current city. Note that a more complicated version of this\n
  problem would augment the state with considerations of time, gas\n
  used, wear on car, tolls to pay, etc."
    |SYSTEM|::|%SET-DOCUMENTATION| |CLOS|::|PRINT-OBJECT|
    |SYSTEM|::|TRACED-DEFINITION| |SYSTEM|::|UNTRACE1|
    #Y(#:|1 13 (DEFSTRUCTURE (ROUTE-FINDING-PROBLEM #) "The problem of finding a route from one city to another on a map.\n
  By default it is a random map.  A state in a route-finding problem is just \n
  the name of the current city. Note that a more complicated version of this\n
  problem would augment the state with considerations of time, gas\n
  used, wear on car, tolls to pay, etc." ...)-1-2-1|
       #15Y(00 00 00 00 01 00 00 00 20 02 DA C6 5D 19 02)
       (#Y(#:|1 13 (DEFSTRUCTURE (ROUTE-FINDING-PROBLEM #) "The problem of finding a route from one city to another on a map.\n
  By default it is a random map.  A state in a route-finding problem is just \n
  the name of the current city. Note that a more complicated version of this\n
  problem would augment the state with considerations of time, gas\n
  used, wear on car, tolls to pay, etc." ...)-1-2-1-1|
           #16Y(00 00 00 00 02 00 00 00 20 03 AE AE 30 00 19 03)
           (|COMMON-LISP-USER|::|PRINT-STRUCTURE|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
        (|COMMON-LISP|::|T|))
       (|COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    :|QUALIFIERS| :|LAMBDA-LIST| (|SYSTEM|::|STRUCT| |COMMON-LISP|::|STREAM|)
    |CLOS|::|SIGNATURE|
    #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
      |COMMON-LISP|::|NIL|)
    :|SPECIALIZERS| |CLOS|::|DO-DEFMETHOD|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|15 21 (DEFMETHOD SUCCESSORS (# CITY-NAME) ...)-2|
   #50Y(00 00 00 00 00 00 00 00 20 01 DA DB 38 01 8F 9E 03 DA 2F 02 DA DD DE 63
        DF E0 E1 E2 E3 E4 38 02 72 3A 64 38 02 72 3A 7B 02 E5 E6 7B 0A 2D 03 0D
        19 01)
   (|COMMON-LISP-USER|::|SUCCESSORS| |SYSTEM|::|TRACED-DEFINITION|
    |SYSTEM|::|UNTRACE1|
    #Y(#:|15 21 (DEFMETHOD SUCCESSORS (# CITY-NAME) ...)-2-1|
       #15Y(00 00 00 00 01 00 00 00 20 02 DA C6 5D 19 02)
       (#Y(#:|15 21 (DEFMETHOD SUCCESSORS (# CITY-NAME) ...)-2-1-1|
           #43Y(00 00 00 00 02 00 00 00 20 03 63 AE B0 70 00 9D 5C 5C 5B F8 63
                1B 0B 87 01 00 78 9E 5B 7A 84 02 83 01 AD 8D 9F 71 16 02 15 19
                03)
           (|COMMON-LISP-USER|::|FIND-CITY|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
        (|COMMON-LISP|::|T|))
       (|COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    :|QUALIFIERS| :|LAMBDA-LIST|
    (|COMMON-LISP-USER|::|PROBLEM| |COMMON-LISP-USER|::|CITY-NAME|)
    |CLOS|::|SIGNATURE|
    #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
      |COMMON-LISP|::|NIL|)
    :|SPECIALIZERS| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|
    :|DOCUMENTATION|
    "Return a list of (action . new-state) pairs.\n
  In this case, the action and the new state are both the name of the city."
    |CLOS|::|DO-DEFMETHOD|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|23 26 (DEFMETHOD EDGE-COST (# NODE ACTION ...) ...)-3|
   #60Y(00 00 00 00 00 00 00 00 20 01 DA DB 38 01 8F 9E 03 DA 2F 02 DA DD DE 63
        DF E0 E1 E2 E3 E4 38 02 72 3A 64 38 02 72 3A 64 38 02 72 3A 64 38 02 72
        3A 7B 04 E5 E6 7B 0A 2D 03 0D 19 01)
   (|COMMON-LISP-USER|::|EDGE-COST| |SYSTEM|::|TRACED-DEFINITION|
    |SYSTEM|::|UNTRACE1|
    #Y(#:|23 26 (DEFMETHOD EDGE-COST (# NODE ACTION ...) ...)-3-1|
       #15Y(00 00 00 00 01 00 00 00 20 02 DA C6 5D 19 02)
       (#Y(#:|23 26 (DEFMETHOD EDGE-COST (# NODE ACTION ...) ...)-3-1-1|
           #26Y(00 00 00 00 04 00 00 00 20 05 AE 2F 00 DB B0 DC 72 43 B1 70 03
                AE 30 04 19 05)
           (|COMMON-LISP-USER|::|DECLARE-IGNORE| |COMMON-LISP-USER|::|NODE| 1.
            |COMMON-LISP-USER|::|FIND-CITY|
            |COMMON-LISP-USER|::|ROAD-DISTANCE|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
        (|COMMON-LISP|::|T|))
       (|COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    :|QUALIFIERS| :|LAMBDA-LIST|
    (|COMMON-LISP-USER|::|PROBLEM| |COMMON-LISP-USER|::|NODE|
     |COMMON-LISP-USER|::|ACTION| |COMMON-LISP-USER|::|CITY|)
    |CLOS|::|SIGNATURE|
    #(4. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
      |COMMON-LISP|::|NIL|)
    :|SPECIALIZERS| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|
    :|DOCUMENTATION| "The edge-cost is the road distance to the next city."
    |CLOS|::|DO-DEFMETHOD|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|28 31 (DEFMETHOD H-COST (# CITY-NAME) ...)-4|
   #50Y(00 00 00 00 00 00 00 00 20 01 DA DB 38 01 8F 9E 03 DA 2F 02 DA DD DE 63
        DF E0 E1 E2 E3 E4 38 02 72 3A 64 38 02 72 3A 7B 02 E5 E6 7B 0A 2D 03 0D
        19 01)
   (|COMMON-LISP-USER|::|H-COST| |SYSTEM|::|TRACED-DEFINITION|
    |SYSTEM|::|UNTRACE1|
    #Y(#:|28 31 (DEFMETHOD H-COST (# CITY-NAME) ...)-4-1|
       #15Y(00 00 00 00 01 00 00 00 20 02 DA C6 5D 19 02)
       (#Y(#:|28 31 (DEFMETHOD H-COST (# CITY-NAME) ...)-4-1-1|
           #26Y(00 00 00 00 02 00 00 00 20 03 AD AF 70 00 DB B0 DC 72 43 B0 70
                00 30 03 19 03)
           (|COMMON-LISP-USER|::|FIND-CITY| |COMMON-LISP-USER|::|PROBLEM| 2.
            |COMMON-LISP-USER|::|STRAIGHT-DISTANCE|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
        (|COMMON-LISP|::|T|))
       (|COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    :|QUALIFIERS| :|LAMBDA-LIST|
    (|COMMON-LISP-USER|::|PROBLEM| |COMMON-LISP-USER|::|CITY-NAME|)
    |CLOS|::|SIGNATURE|
    #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
      |COMMON-LISP|::|NIL|)
    :|SPECIALIZERS| |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|
    :|DOCUMENTATION|
    "The heuristic cost is the straight-line distance to the goal."
    |CLOS|::|DO-DEFMETHOD|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|33 39 (DEFSTRUCT (CITY #) "A city's loc (location) is an (x y) pair.  The neighbors slot holds\n
  a list of (city-name . distance-along-road) pairs.  Be careful to \n
  distinguish between a city name and a city structure." ...)-5|
   #461Y(00 00 00 00 00 00 00 00 20 01 DA DB DC 38 01 72 9E 2F 03 16 01 DA 2F
         04 DA DF E0 E1 E2 6B 09 E4 E5 E6 E7 E8 64 E9 EA EB 01 02 6F 12 70 13
         EE EF F0 F1 F2 63 6E 11 19 6B 09 E4 F4 E6 F5 E8 64 E9 EA EB 01 02 6F
         12 70 13 EE F6 F0 F7 F2 63 6E 11 19 6B 09 E4 65 1E E6 65 1F E8 64 E9
         EA EB 01 02 6F 12 70 13 EE 65 20 F0 65 21 F2 63 6E 11 19 7B 03 6B 22
         E4 E5 E6 E7 E8 64 E9 EA EB 01 02 6F 12 70 13 EE 65 23 65 24 65 25 65
         26 65 27 6E 11 28 6B 22 E4 F4 E6 F5 E8 64 E9 EA EB 01 02 6F 12 70 13
         EE 65 29 65 24 65 2A 65 26 65 2B 6E 11 28 6B 22 E4 65 1E E6 65 1F E8
         64 E9 EA EB 01 02 6F 12 70 13 EE 65 2C 65 24 65 2D 65 26 65 2E 6E 11
         28 7B 03 63 65 2F 63 73 08 00 32 A2 DA 2F 30 E2 2F 31 E2 65 32 32 9C
         65 33 31 62 65 2F 2F 31 65 2F 65 34 65 35 32 A2 65 2F 65 36 32 9C 65
         37 31 62 65 38 31 62 65 39 2F 31 65 39 65 34 65 3A 32 A2 65 39 65 3B
         32 9C 65 39 65 3C DA 32 A2 65 3D 31 62 65 3E 31 62 65 3F 2F 31 65 3F
         65 34 65 40 32 A2 65 3F 65 41 32 9C 65 3F 65 3C DA 32 A2 65 42 31 62
         65 43 31 62 65 44 2F 31 65 44 65 34 65 45 32 A2 65 44 65 46 32 9C 65
         44 65 3C DA 32 A2 65 47 31 62 65 48 31 62 65 49 2F 31 65 49 65 34 65
         4A 32 A2 65 49 65 4B 32 9C 65 39 65 4C DA 32 A2 65 4D 31 62 65 4E 31
         62 65 4F 2F 31 65 4F 65 34 65 50 32 A2 65 4F 65 51 32 9C 65 3F 65 4C
         DA 32 A2 65 52 31 62 65 53 31 62 65 54 2F 31 65 54 65 34 65 55 32 A2
         65 54 65 56 32 9C 65 44 65 4C DA 32 A2 DA 65 57 65 58 2D 03 59 C5 19
         01)
   (|COMMON-LISP-USER|::|CITY| |COMMON-LISP|::|STRUCTURE-OBJECT|
    |CLOS|::|CLOSCLASS| |CLOS|::|CLASS-NAMES|
    |SYSTEM|::|STRUCTURE-UNDEFINE-ACCESSORIES|
    |SYSTEM|::|DEFSTRUCT-DESCRIPTION| |COMMON-LISP|::|LIST| 3.
    |COMMON-LISP-USER|::|MAKE-CITY|
    |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
    |COMMON-LISP-USER|::|NAME| :|INITARGS| (:|NAME|) :|TYPE| :|ALLOCATION|
    :|INSTANCE| |CLOS|::|INHERITABLE-INITER|
    |SYSTEM|::|MAKE-CONSTANT-INITFUNCTION|
    |CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| |CLOS|::|INHERITABLE-DOC|
    (|COMMON-LISP|::|NIL|) |CLOS|::|LOCATION| 0. |CLOS|::|READONLY|
    |CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
    |COMMON-LISP-USER|::|LOC| (:|LOC|) (|COMMON-LISP|::|NIL|) 1.
    |COMMON-LISP-USER|::|NEIGHBORS| (:|NEIGHBORS|) (|COMMON-LISP|::|NIL|) 2.
    |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| (|COMMON-LISP|::|NIL|)
    :|READERS| (|COMMON-LISP-USER|::|CITY-NAME|) :|WRITERS|
    ((|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|CITY-NAME|))
    |CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
    (|COMMON-LISP|::|NIL|) (|COMMON-LISP-USER|::|CITY-LOC|)
    ((|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|CITY-LOC|))
    (|COMMON-LISP|::|NIL|) (|COMMON-LISP-USER|::|CITY-NEIGHBORS|)
    ((|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|CITY-NEIGHBORS|))
    |COMMON-LISP-USER|::|COPY-CITY| |CLOS|::|UNDEFINE-STRUCTURE-CLASS|
    |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|COMMON-LISP-USER|::|MAKE-CITY|
       #27Y(00 00 00 00 00 00 00 00 A6 1B 03 00 00 00 3D 03 3D 02 3D 01 AF AF
            AF 61 03 19 04)
       (:|NAME| :|LOC| :|NEIGHBORS|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|)
       (|COMMON-LISP|::|&KEY| (#:|NAME| |COMMON-LISP|::|NIL|)
        (#:|LOC| |COMMON-LISP|::|NIL|) (#:|NEIGHBORS| |COMMON-LISP|::|NIL|))
       |COMMON-LISP|::|NIL| 1)
    (|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|COPY-CITY|)
    |SYSTEM|::|INLINE-EXPANSION|
    ((|COMMON-LISP|::|STRUCTURE|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |COMMON-LISP-USER|::|COPY-CITY|))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|COPY-CITY|
      (|COMMON-LISP|::|COPY-LIST| |COMMON-LISP|::|STRUCTURE|)))
    #Y(|COMMON-LISP-USER|::|COPY-CITY|
       #15Y(00 00 00 00 01 00 00 00 26 02 AD 31 AB 19 02) ()
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|)
       (|COMMON-LISP|::|STRUCTURE|) |COMMON-LISP|::|NIL| 1)
    (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CITY-NAME|
     (|COMMON-LISP-USER|::|CITY|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|CITY-NAME|)
    |COMMON-LISP-USER|::|CITY-NAME|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |COMMON-LISP-USER|::|CITY-NAME|))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CITY-NAME|
      (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
       (|COMMON-LISP|::|NTH| 0. . #1=(|SYSTEM|::|OBJECT|)))))
    #Y(|COMMON-LISP-USER|::|CITY-NAME|
       #14Y(00 00 00 00 01 00 00 00 20 02 9E 5B 19 02) ()
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    |SYSTEM|::|DEFSTRUCT-READER|
    (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CITY-LOC|
     (|COMMON-LISP-USER|::|CITY|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|CITY-LOC|)
    |COMMON-LISP-USER|::|CITY-LOC|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |COMMON-LISP-USER|::|CITY-LOC|))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CITY-LOC|
      (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
       (|COMMON-LISP|::|NTH| 1. . #1#))))
    #Y(|COMMON-LISP-USER|::|CITY-LOC|
       #15Y(00 00 00 00 01 00 00 00 20 02 9E 5C 5B 19 02) ()
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CITY-NEIGHBORS|
     (|COMMON-LISP-USER|::|CITY|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|CITY-NEIGHBORS|)
    |COMMON-LISP-USER|::|CITY-NEIGHBORS|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |COMMON-LISP-USER|::|CITY-NEIGHBORS|))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CITY-NEIGHBORS|
      (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
       (|COMMON-LISP|::|NTH| 2. . #1#))))
    #Y(|COMMON-LISP-USER|::|CITY-NEIGHBORS|
       #16Y(00 00 00 00 01 00 00 00 20 02 9E 5C 5C 5B 19 02) ()
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|FUNCTION|
     (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|CITY-NAME|)
     (|COMMON-LISP|::|T| |COMMON-LISP-USER|::|CITY|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|CITY-NAME|))
    #.(|SYSTEM|::|GET-SETF-SYMBOL| '|COMMON-LISP-USER|::|CITY-NAME|)
    ((|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       #2=(|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|CITY-NAME|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CITY-NAME|
      (|COMMON-LISP|::|SETF|
       (|COMMON-LISP|::|NTH| 0. . #3=(|SYSTEM|::|OBJECT|)) .
       #4=(|SYSTEM|::|VALUE|))))
    #Y(#2# #16Y(00 00 00 00 02 00 00 00 20 03 AD AF 31 B6 19 03) ()
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
    |SYSTEM|::|DEFSTRUCT-WRITER|
    (|COMMON-LISP|::|FUNCTION|
     (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|CITY-LOC|)
     (|COMMON-LISP|::|T| |COMMON-LISP-USER|::|CITY|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|CITY-LOC|))
    #.(|SYSTEM|::|GET-SETF-SYMBOL| '|COMMON-LISP-USER|::|CITY-LOC|)
    ((|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       #5=(|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|CITY-LOC|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CITY-LOC|
      (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|NTH| 1. . #3#) . #4#)))
    #Y(#5# #17Y(00 00 00 00 02 00 00 00 20 03 95 01 AF 31 B6 19 03) ()
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
    (|COMMON-LISP|::|FUNCTION|
     (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|CITY-NEIGHBORS|)
     (|COMMON-LISP|::|T| |COMMON-LISP-USER|::|CITY|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|CITY-NEIGHBORS|))
    #.(|SYSTEM|::|GET-SETF-SYMBOL| '|COMMON-LISP-USER|::|CITY-NEIGHBORS|)
    ((|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       #6=(|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|CITY-NEIGHBORS|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CITY-NEIGHBORS|
      (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|NTH| 2. . #3#) . #4#)))
    #Y(#6# #18Y(00 00 00 00 02 00 00 00 20 03 9E 5C 79 AF 31 B6 19 03) ()
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
    |COMMON-LISP|::|TYPE|
    "A city's loc (location) is an (x y) pair.  The neighbors slot holds\n
  a list of (city-name . distance-along-road) pairs.  Be careful to \n
  distinguish between a city name and a city structure."
    |SYSTEM|::|%SET-DOCUMENTATION|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|41 46 (DEFUN ROAD-DISTANCE (CITY1 CITY-NAME2) ...)-6|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|COMMON-LISP-USER|::|ROAD-DISTANCE| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|COMMON-LISP-USER|::|ROAD-DISTANCE|
       #30Y(00 00 00 00 02 00 00 00 26 03 94 02 9F 22 0C AD A0 5C 5C 78 38 03
            31 C8 5C 19 03 C5 19 03)
       (0.) (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|COMMON-LISP-USER|::|CITY1| |COMMON-LISP-USER|::|CITY-NAME2|)
       "The distance along the road between two cities.  The first is a city \n
  structure, the second just the name of the intended destination."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|48 51 (DEFUN STRAIGHT-DISTANCE (CITY1 CITY2) ...)-7|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|COMMON-LISP-USER|::|STRAIGHT-DISTANCE| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|COMMON-LISP-USER|::|STRAIGHT-DISTANCE|
       #24Y(00 00 00 00 02 00 00 00 26 03 9F 5C 78 9F 5C 78 70 00 38 01 32 D1
            19 03)
       (|COMMON-LISP-USER|::|XY-DISTANCE|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|COMMON-LISP-USER|::|CITY1| |COMMON-LISP-USER|::|CITY2|)
       "Distance between two cities on a straight line (as the crow flies)." 1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|53 56 (DEFUN FIND-CITY (NAME MAP) ...)-8|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|COMMON-LISP-USER|::|FIND-CITY| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|COMMON-LISP-USER|::|FIND-CITY|
       #29Y(00 00 00 00 02 00 00 00 26 03 DA AE 8F 47 06 DB AE DC 81 43 01 AE
            AE 38 03 31 C8 19 03)
       (|COMMON-LISP-USER|::|PROBLEM|
        |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| 5.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|COMMON-LISP-USER|::|NAME| |COMMON-LISP|::|MAP|)
       "Look up the city on the map, and return its information." 1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|58 86 (DEFUN RANDOM-ROUTE-MAP (&KEY # # ...) ...)-9|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|COMMON-LISP-USER|::|RANDOM-ROUTE-MAP| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|COMMON-LISP-USER|::|RANDOM-ROUTE-MAP|
       #196Y(00 00 00 00 00 00 00 00 A6 1B 05 00 00 00 3B 05 02 CA FD 3B 04 02
             CB FC 3B 03 02 CB FB 3B 02 02 CC FA 3B 01 0A B1 E2 B0 73 02 37 82
             01 36 01 63 E3 1B 1A E4 AD 6F 0B E6 63 E7 B7 38 01 72 F7 B7 38 01
             72 F7 70 0E 6E 06 0F 84 01 85 00 AC B4 91 01 32 60 16 01 00 2B 01
             AD 00 0B 01 00 1B 80 5A 9D 5B 0B 01 00 EA B2 B2 70 11 68 03 00 9D
             5C 5C 5B F8 72 62 73 01 38 73 01 35 AF 71 AB EC B0 6D 13 01 38 02
             72 82 93 00 2D AD 8F AD 29 94 00 83 01 93 00 1D 68 04 00 9E 22 17
             94 00 68 05 00 9D 5C 5C 5B F8 38 03 8C C8 08 86 02 68 04 00 AD 30
             14 16 01 92 00 53 16 02 83 00 AC 8D 9F FF A1 16 02 15 19 06)
       (:|N-CITIES| :|WIDTH| :|HEIGHT| :|MIN-ROADS| :|MAX-ROADS| 10. 100. 2. 3.
        1. :|NAME| |COMMON-LISP-USER|::|NUMBER->NAME| :|NEIGHBORS| :|LOC|
        |COMMON-LISP-USER|::|@| |COMMON-LISP-USER|::|MAKE-CITY| 0.
        |COMMON-LISP-USER|::|RANDOM-INTEGER| #.#'|COMMON-LISP|::|<|
        #Y(|COMMON-LISP-USER|::|RANDOM-ROUTE-MAP-1|
           #18Y(00 00 00 00 01 00 00 00 26 02 69 00 01 AE 30 01 19 02)
           (|COMMON-LISP|::|NIL| |COMMON-LISP-USER|::|STRAIGHT-DISTANCE|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
           (|COMMON-LISP-USER|::|CITY2|) |COMMON-LISP|::|NIL| 1)
        |COMMON-LISP-USER|::|BUILD-ROAD|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|COMMON-LISP|::|&KEY| (|COMMON-LISP-USER|::|N-CITIES| 10.)
        (|COMMON-LISP-USER|::|WIDTH| 100.) (|COMMON-LISP-USER|::|HEIGHT| 100.)
        (|COMMON-LISP-USER|::|MIN-ROADS| 2.)
        (|COMMON-LISP-USER|::|MAX-ROADS|
         (|COMMON-LISP|::|MIN| |COMMON-LISP-USER|::|N-CITIES|
          (|COMMON-LISP|::|+| |COMMON-LISP-USER|::|MIN-ROADS| 3.))))
       "Return a random map with n-cities in it, and some roads between them.\n
  Each city is connected to between MIN-ROADS and MAX-ROADS other cities.\n
  The default is from 2 to 5.  The road between any two cities has a length \n
  of 1 to 1.5 times the straight-line distance between them."
       1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|88 93 (DEFUN BUILD-ROAD (CITY1 CITY2) ...)-10|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|COMMON-LISP-USER|::|BUILD-ROAD| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|COMMON-LISP-USER|::|BUILD-ROAD|
       #69Y(00 00 00 00 02 00 00 00 26 03 AE AE 70 00 DB DC 38 01 72 F7 73 02
            37 AD 73 02 39 38 01 72 D1 94 04 9E 7A A1 5C 5C 78 AD 9E 7A A3 5C
            79 AD 31 B6 16 03 94 03 9E 7A A2 5C 5C 78 AD 9E 7A A4 5C 79 AD 31
            B6 19 08)
       (|COMMON-LISP-USER|::|STRAIGHT-DISTANCE| 1.0f0 0.5f0)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|COMMON-LISP-USER|::|CITY1| |COMMON-LISP-USER|::|CITY2|)
       "Construct a road between two cities." 1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|95 99 (DEFUN NUMBER->NAME (I) ...)-11|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|COMMON-LISP-USER|::|NUMBER->NAME| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|COMMON-LISP-USER|::|NUMBER->NAME|
       #49Y(00 00 00 00 01 00 00 00 26 02 DA AE DB 90 02 33 19 38 02 72 8F DD
            AD 31 94 AC 01 06 B5 2D 08 04 AC 81 90 00 38 01 31 E1 19 02 DC AE
            33 01 01 19 02)
       (1. 26.
        #(0. |COMMON-LISP-USER|::|A| |COMMON-LISP-USER|::|B|
          |COMMON-LISP-USER|::|C| |COMMON-LISP-USER|::|D|
          |COMMON-LISP-USER|::|E| |COMMON-LISP-USER|::|F|
          |COMMON-LISP-USER|::|G| |COMMON-LISP-USER|::|H|
          |COMMON-LISP-USER|::|I| |COMMON-LISP-USER|::|J|
          |COMMON-LISP-USER|::|K| |COMMON-LISP-USER|::|L|
          |COMMON-LISP-USER|::|M| |COMMON-LISP-USER|::|N|
          |COMMON-LISP-USER|::|O| |COMMON-LISP-USER|::|P|
          |COMMON-LISP-USER|::|Q| |COMMON-LISP-USER|::|R|
          |COMMON-LISP-USER|::|S| |COMMON-LISP|::|T| |COMMON-LISP-USER|::|U|
          |COMMON-LISP-USER|::|V| |COMMON-LISP-USER|::|W|
          |COMMON-LISP-USER|::|X| |COMMON-LISP-USER|::|Y|
          |COMMON-LISP-USER|::|Z|)
        #\C |SYSTEM|::|DO-FORMAT-DECIMAL|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|COMMON-LISP-USER|::|I|)
       "Turn an integer into a symbol.  1-26 go to A-Z; beyond that use Ci" 1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|101 129 (DEFPARAMETER *ROMANIA-MAP* '(# # # ...) ...)-12|
   #26Y(00 00 00 00 00 00 00 00 20 01 DA 31 62 DB DC 31 5A DB DD DE 2D 03 05 C6
        19 01)
   ((|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*ROMANIA-MAP*|)
    |COMMON-LISP-USER|::|*ROMANIA-MAP*|
    ((|COMMON-LISP-USER|::|ARAD| (91. 492.)
      ((|COMMON-LISP-USER|::|ZERIND| . 75.)
       (|COMMON-LISP-USER|::|SIBIU| . 140.)
       (|COMMON-LISP-USER|::|TIMISOARA| . 118.)))
     (|COMMON-LISP-USER|::|BUCHAREST| (400. 327.)
      ((|COMMON-LISP-USER|::|FAGARAS| . 211.)
       (|COMMON-LISP-USER|::|PITESTI| . 101.)
       (|COMMON-LISP-USER|::|GIURGIU| . 90.)
       (|COMMON-LISP-USER|::|URZICENI| . 85.)))
     (|COMMON-LISP-USER|::|CRAIOVA| (253. 288.)
      ((|COMMON-LISP-USER|::|DOBRETA| . 120.)
       (|COMMON-LISP-USER|::|RIMNICU| . 146.)
       (|COMMON-LISP-USER|::|PITESTI| . 138.)))
     (|COMMON-LISP-USER|::|DOBRETA| (165. 299.)
      ((|COMMON-LISP-USER|::|MEHADIA| . 75.)
       (|COMMON-LISP-USER|::|CRAIOVA| . 120.)))
     (|COMMON-LISP-USER|::|EFORIE| (562. 293.)
      ((|COMMON-LISP-USER|::|HIRSOVA| . 86.)))
     (|COMMON-LISP-USER|::|FAGARAS| (305. 449.)
      ((|COMMON-LISP-USER|::|SIBIU| . 99.)
       (|COMMON-LISP-USER|::|BUCHAREST| . 211.)))
     (|COMMON-LISP-USER|::|GIURGIU| (375. 270.)
      ((|COMMON-LISP-USER|::|BUCHAREST| . 90.)))
     (|COMMON-LISP-USER|::|HIRSOVA| (534. 350.)
      ((|COMMON-LISP-USER|::|URZICENI| . 98.)
       (|COMMON-LISP-USER|::|EFORIE| . 86.)))
     (|COMMON-LISP-USER|::|IASI| (473. 506.)
      ((|COMMON-LISP-USER|::|NEAMT| . 87.)
       (|COMMON-LISP-USER|::|VASLUI| . 92.)))
     (|COMMON-LISP-USER|::|LUGOJ| (165. 379.)
      ((|COMMON-LISP-USER|::|TIMISOARA| . 111.)
       (|COMMON-LISP-USER|::|MEHADIA| . 70.)))
     (|COMMON-LISP-USER|::|MEHADIA| (168. 339.)
      ((|COMMON-LISP-USER|::|LUGOJ| . 70.)
       (|COMMON-LISP-USER|::|DOBRETA| . 75.)))
     (|COMMON-LISP-USER|::|NEAMT| (406. 537.)
      ((|COMMON-LISP-USER|::|IASI| . 87.)))
     (|COMMON-LISP-USER|::|ORADEA| (131. 571.)
      ((|COMMON-LISP-USER|::|ZERIND| . 71.)
       (|COMMON-LISP-USER|::|SIBIU| . 151.)))
     (|COMMON-LISP-USER|::|PITESTI| (320. 368.)
      ((|COMMON-LISP-USER|::|RIMNICU| . 97.)
       (|COMMON-LISP-USER|::|CRAIOVA| . 138.)
       (|COMMON-LISP-USER|::|BUCHAREST| . 101.)))
     (|COMMON-LISP-USER|::|RIMNICU| (233. 410.)
      ((|COMMON-LISP-USER|::|SIBIU| . 80.)
       (|COMMON-LISP-USER|::|PITESTI| . 97.)
       (|COMMON-LISP-USER|::|CRAIOVA| . 146.)))
     (|COMMON-LISP-USER|::|SIBIU| (207. 457.)
      ((|COMMON-LISP-USER|::|ARAD| . 140.)
       (|COMMON-LISP-USER|::|ORADEA| . 151.)
       (|COMMON-LISP-USER|::|FAGARAS| . 99.)
       (|COMMON-LISP-USER|::|RIMNICU| . 80.)))
     (|COMMON-LISP-USER|::|TIMISOARA| (94. 410.)
      ((|COMMON-LISP-USER|::|ARAD| . 118.)
       (|COMMON-LISP-USER|::|LUGOJ| . 111.)))
     (|COMMON-LISP-USER|::|URZICENI| (456. 350.)
      ((|COMMON-LISP-USER|::|BUCHAREST| . 85.)
       (|COMMON-LISP-USER|::|HIRSOVA| . 98.)
       (|COMMON-LISP-USER|::|VASLUI| . 142.)))
     (|COMMON-LISP-USER|::|VASLUI| (509. 444.)
      ((|COMMON-LISP-USER|::|IASI| . 92.)
       (|COMMON-LISP-USER|::|URZICENI| . 142.)))
     (|COMMON-LISP-USER|::|ZERIND| (108. 531.)
      ((|COMMON-LISP-USER|::|ARAD| . 75.)
       (|COMMON-LISP-USER|::|ORADEA| . 71.))))
    |COMMON-LISP|::|VARIABLE|
    "A representation of the map in Figure 4.2 [p 95].\n
  But note that the straight-line distances to Bucharest are NOT the same."
    |SYSTEM|::|%SET-DOCUMENTATION|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|131 135 (DEFSTRUCTURE (ROMANIAN-PROBLEM #) "A route-finding problem on the Romania map, with random start and goal.")-13-1|
   #18Y(00 00 00 00 00 00 00 00 20 01 DA DB DC 32 A2 3E 19 01)
   (|COMMON-LISP-USER|::|ROMANIAN-PROBLEM| :|SUPERTYPE|
    |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|131 135 (DEFSTRUCTURE (ROMANIAN-PROBLEM #) "A route-finding problem on the Romania map, with random start and goal.")-13-2|
   #734Y(00 00 00 00 00 00 00 00 20 01 00 2B 01 DA DB DC 38 01 72 9E 2F 03 5D
         0B 00 00 DA 2F 04 DA DF 32 A3 DA 68 01 00 E0 63 E1 E2 6B 09 E4 E5 E6
         E7 E8 64 E9 EA EB EC ED 6F 14 70 15 F0 F1 F2 F3 F4 63 6E 11 1B 6B 09
         E4 F6 E6 F7 E8 64 E9 EA EB 65 1E 65 1F 6F 14 70 15 F0 65 20 F2 65 21
         F4 63 6E 11 1B 6B 09 E4 65 22 E6 65 23 E8 64 E9 EA EB 65 24 DB 65 22
         70 25 70 15 F0 65 26 F2 65 27 F4 63 6E 11 1B 6B 09 E4 65 28 E6 65 29
         E8 64 E9 EA EB 63 DB 65 28 70 25 70 15 F0 65 2A F2 65 2B F4 63 6E 11
         1B 6B 09 E4 65 2C E6 65 2D E8 64 E9 EA EB 65 2E 65 2F 70 15 F0 65 30
         F2 65 31 F4 63 6E 11 1B 7B 05 6B 32 E4 E5 E6 E7 E8 64 E9 EA EB EC ED
         6F 14 70 15 F0 65 33 65 34 63 65 35 63 6E 11 36 6B 32 E4 F6 E6 F7 E8
         64 E9 EA EB 65 1E 65 1F 6F 14 70 15 F0 65 37 65 34 63 65 35 63 6E 11
         36 6B 32 E4 65 2C E6 65 2D E8 64 E9 EA EB 65 2E 65 38 70 15 F0 65 39
         65 34 63 65 35 63 6E 11 36 7B 03 2D 08 3A E0 2F 3B E0 AD 6D 3C 01 32
         9C 16 01 65 3D 31 62 E2 2F 3B E2 65 3E 65 3F 32 A2 E2 65 40 32 9C 65
         41 31 62 E1 2F 3B E1 65 3E 65 42 32 A2 E1 65 43 32 9C 65 44 31 62 65
         45 31 62 65 46 2F 3B 65 46 65 3E 65 47 32 A2 65 46 65 48 32 9C 65 46
         65 49 DA 32 A2 65 4A 31 62 65 4B 31 62 65 4C 2F 3B 65 4C 65 3E 65 4D
         32 A2 65 4C 65 4E 32 9C 65 4C 65 49 DA 32 A2 65 4F 31 62 65 50 31 62
         65 51 2F 3B 65 51 65 3E 65 52 32 A2 65 51 65 53 32 9C 65 51 65 49 DA
         32 A2 65 54 31 62 65 55 31 62 65 56 2F 3B 65 56 65 3E 65 57 32 A2 65
         56 65 58 32 9C 65 56 65 49 DA 32 A2 65 59 31 62 65 5A 31 62 65 5B 2F
         3B 65 5B 65 3E 65 5C 32 A2 65 5B 65 5D 32 9C 65 5B 65 49 DA 32 A2 65
         5E 31 62 65 5F 31 62 65 60 2F 3B 65 60 65 3E 65 61 32 A2 65 60 65 62
         32 9C 65 46 65 63 DA 32 A2 65 64 31 62 65 65 31 62 65 66 2F 3B 65 66
         65 3E 65 67 32 A2 65 66 65 68 32 9C 65 4C 65 63 DA 32 A2 65 69 31 62
         65 6A 31 62 65 6B 2F 3B 65 6B 65 3E 65 6C 32 A2 65 6B 65 6D 32 9C 65
         51 65 63 DA 32 A2 65 6E 31 62 65 6F 31 62 65 70 2F 3B 65 70 65 3E 65
         71 32 A2 65 70 65 72 32 9C 65 56 65 63 DA 32 A2 65 73 31 62 65 74 31
         62 65 75 2F 3B 65 75 65 3E 65 76 32 A2 65 75 65 77 32 9C 65 5B 65 63
         DA 32 A2 DA 65 78 65 79 2D 03 7A 65 7B 65 7C 38 01 8F 9E 04 65 7B 2F
         7D 65 7B 65 7E 65 7F 63 65 80 80 65 80 81 65 80 82 65 80 83 65 80 84
         DA 38 02 72 3A 64 38 02 72 3A 7B 02 7B 08 2D 03 80 85 C5 19 01)
   (|COMMON-LISP-USER|::|ROMANIAN-PROBLEM|
    |COMMON-LISP-USER|::|ROUTE-FINDING-PROBLEM| |CLOS|::|CLOSCLASS|
    |CLOS|::|CLASS-NAMES| |SYSTEM|::|STRUCTURE-UNDEFINE-ACCESSORIES|
    |SYSTEM|::|DEFSTRUCT-DESCRIPTION|
    |COMMON-LISP-USER|::|MAKE-ROMANIAN-PROBLEM|
    |COMMON-LISP-USER|::|COPY-ROMANIAN-PROBLEM|
    |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-P|
    |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
    |COMMON-LISP-USER|::|INITIAL-STATE| :|INITARGS| (:|INITIAL-STATE|) :|TYPE|
    :|ALLOCATION| :|INSTANCE| |CLOS|::|INHERITABLE-INITER|
    #1='|COMMON-LISP-USER|::|ARAD| |COMMON-LISP-USER|::|ARAD|
    |SYSTEM|::|MAKE-CONSTANT-INITFUNCTION|
    |CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| |CLOS|::|INHERITABLE-DOC|
    (|COMMON-LISP|::|NIL|) |CLOS|::|LOCATION| 1. |CLOS|::|READONLY|
    |CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
    |COMMON-LISP-USER|::|GOAL| (:|GOAL|) #2='|COMMON-LISP-USER|::|BUCHAREST|
    |COMMON-LISP-USER|::|BUCHAREST| (|COMMON-LISP|::|NIL|) 2.
    |COMMON-LISP-USER|::|NUM-EXPANDED| (:|NUM-EXPANDED|) 0.
    |SYSTEM|::|FIND-STRUCTURE-CLASS-SLOT-INITFUNCTION| (|COMMON-LISP|::|NIL|)
    3. |COMMON-LISP-USER|::|ITERATIVE?| (:|ITERATIVE?|) (|COMMON-LISP|::|NIL|)
    4. |COMMON-LISP|::|MAP| (:|MAP|) |COMMON-LISP-USER|::|*ROMANIA-MAP*|
    #Y(|COMMON-LISP-USER|::|DEFAULT-MAP|
       #14Y(00 00 00 00 00 00 00 00 26 01 0E 00 19 01)
       (|COMMON-LISP-USER|::|*ROMANIA-MAP*|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|) ()
       |COMMON-LISP|::|NIL| 1)
    (|COMMON-LISP|::|NIL|) 5. |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>|
    (|COMMON-LISP|::|NIL|) :|READERS| :|WRITERS|
    |CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
    (|COMMON-LISP|::|NIL|)
    #Y(|COMMON-LISP-USER|::|DEFAULT-MAP|
       #14Y(00 00 00 00 00 00 00 00 26 01 0E 00 19 01)
       (|COMMON-LISP-USER|::|*ROMANIA-MAP*|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|) ()
       |COMMON-LISP|::|NIL| 1)
    (|COMMON-LISP|::|NIL|) |CLOS|::|DEFINE-STRUCTURE-CLASS|
    |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|COMMON-LISP-USER|::|MAKE-ROMANIAN-PROBLEM|
       #76Y(00 00 00 00 00 00 00 00 A6 1B 05 00 01 00 3B 05 02 CB FD 3B 04 02
            CC FC 3B 03 02 CD FB 3D 02 3B 01 03 0E 09 F9 69 00 01 E4 72 45 E5
            AD E6 B5 32 44 E5 AD E7 B4 32 44 E5 AD E8 B3 32 44 E5 AD E9 B2 32
            44 E5 AD EA B1 32 44 15 19 06)
       (|COMMON-LISP|::|NIL| :|INITIAL-STATE| :|GOAL| :|NUM-EXPANDED|
        :|ITERATIVE?| :|MAP| |COMMON-LISP-USER|::|ARAD|
        |COMMON-LISP-USER|::|BUCHAREST| 0. |COMMON-LISP-USER|::|*ROMANIA-MAP*|
        6. |COMMON-LISP-USER|::|ROMANIAN-PROBLEM| 1. 2. 3. 4. 5.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|COMMON-LISP|::|&KEY| (#:|INITIAL-STATE| #1#) (#:|GOAL| #2#)
        (#:|NUM-EXPANDED| 0.) (#:|ITERATIVE?| |COMMON-LISP|::|NIL|)
        (#:|MAP| |COMMON-LISP-USER|::|*ROMANIA-MAP*|))
       |COMMON-LISP|::|NIL| 1)
    (|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-P|)
    |SYSTEM|::|INLINE-EXPANSION|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-P|))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-P|
      (|SYSTEM|::|%STRUCTURE-TYPE-P| '|COMMON-LISP-USER|::|ROMANIAN-PROBLEM|
       |SYSTEM|::|OBJECT|)))
    #Y(|COMMON-LISP-USER|::|ROMANIAN-PROBLEM-P|
       #16Y(00 00 00 00 01 00 00 00 20 02 DA AE 32 47 19 02)
       (|COMMON-LISP-USER|::|ROMANIAN-PROBLEM|)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|COPY-ROMANIAN-PROBLEM|)
    ((|COMMON-LISP|::|STRUCTURE|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |COMMON-LISP-USER|::|COPY-ROMANIAN-PROBLEM|))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|COPY-ROMANIAN-PROBLEM|
      (|COMMON-LISP|::|COPY-STRUCTURE| |COMMON-LISP|::|STRUCTURE|)))
    #Y(|COMMON-LISP-USER|::|COPY-ROMANIAN-PROBLEM|
       #15Y(00 00 00 00 01 00 00 00 26 02 AD 32 46 19 02) ()
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|)
       (|COMMON-LISP|::|STRUCTURE|) |COMMON-LISP|::|NIL| 1)
    (|COMMON-LISP|::|FUNCTION|
     |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-INITIAL-STATE|
     (|COMMON-LISP-USER|::|ROMANIAN-PROBLEM|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-INITIAL-STATE|)
    |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-INITIAL-STATE|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-INITIAL-STATE|))
     (|COMMON-LISP|::|BLOCK|
      |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-INITIAL-STATE|
      (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
       (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP-USER|::|ROMANIAN-PROBLEM|
        |SYSTEM|::|OBJECT| 1.))))
    #Y(|COMMON-LISP-USER|::|ROMANIAN-PROBLEM-INITIAL-STATE|
       #17Y(00 00 00 00 01 00 00 00 20 02 DA AE DB 32 43 19 02)
       (|COMMON-LISP-USER|::|ROMANIAN-PROBLEM| 1.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    |SYSTEM|::|DEFSTRUCT-READER|
    (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-GOAL|
     (|COMMON-LISP-USER|::|ROMANIAN-PROBLEM|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-GOAL|)
    |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-GOAL|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-GOAL|))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-GOAL|
      (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
       (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP-USER|::|ROMANIAN-PROBLEM|
        |SYSTEM|::|OBJECT| 2.))))
    #Y(|COMMON-LISP-USER|::|ROMANIAN-PROBLEM-GOAL|
       #17Y(00 00 00 00 01 00 00 00 20 02 DA AE DB 32 43 19 02)
       (|COMMON-LISP-USER|::|ROMANIAN-PROBLEM| 2.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|FUNCTION|
     |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-NUM-EXPANDED|
     (|COMMON-LISP-USER|::|ROMANIAN-PROBLEM|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-NUM-EXPANDED|)
    |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-NUM-EXPANDED|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-NUM-EXPANDED|))
     (|COMMON-LISP|::|BLOCK|
      |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-NUM-EXPANDED|
      (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
       (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP-USER|::|ROMANIAN-PROBLEM|
        |SYSTEM|::|OBJECT| 3.))))
    #Y(|COMMON-LISP-USER|::|ROMANIAN-PROBLEM-NUM-EXPANDED|
       #17Y(00 00 00 00 01 00 00 00 20 02 DA AE DB 32 43 19 02)
       (|COMMON-LISP-USER|::|ROMANIAN-PROBLEM| 3.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|FUNCTION|
     |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-ITERATIVE?|
     (|COMMON-LISP-USER|::|ROMANIAN-PROBLEM|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-ITERATIVE?|)
    |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-ITERATIVE?|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-ITERATIVE?|))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-ITERATIVE?|
      (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
       (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP-USER|::|ROMANIAN-PROBLEM|
        |SYSTEM|::|OBJECT| 4.))))
    #Y(|COMMON-LISP-USER|::|ROMANIAN-PROBLEM-ITERATIVE?|
       #17Y(00 00 00 00 01 00 00 00 20 02 DA AE DB 32 43 19 02)
       (|COMMON-LISP-USER|::|ROMANIAN-PROBLEM| 4.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-MAP|
     (|COMMON-LISP-USER|::|ROMANIAN-PROBLEM|) |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-MAP|)
    |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-MAP|
    ((|SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-MAP|))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-MAP|
      (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
       (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP-USER|::|ROMANIAN-PROBLEM|
        |SYSTEM|::|OBJECT| 5.))))
    #Y(|COMMON-LISP-USER|::|ROMANIAN-PROBLEM-MAP|
       #17Y(00 00 00 00 01 00 00 00 20 02 DA AE DB 32 43 19 02)
       (|COMMON-LISP-USER|::|ROMANIAN-PROBLEM| 5.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|FUNCTION|
     (|COMMON-LISP|::|SETF|
      |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-INITIAL-STATE|)
     (|COMMON-LISP|::|T| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM|)
     |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     (|COMMON-LISP|::|SETF|
      |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-INITIAL-STATE|))
    #.(|SYSTEM|::|GET-SETF-SYMBOL|
       '|COMMON-LISP-USER|::|ROMANIAN-PROBLEM-INITIAL-STATE|)
    ((|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       #3=(|COMMON-LISP|::|SETF|
           |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-INITIAL-STATE|)))
     (|COMMON-LISP|::|BLOCK|
      |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-INITIAL-STATE|
      (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP-USER|::|ROMANIAN-PROBLEM|
       |SYSTEM|::|OBJECT| 1. |SYSTEM|::|VALUE|)))
    #Y(#3# #18Y(00 00 00 00 02 00 00 00 20 03 DA AE DB B1 32 44 19 03)
       (|COMMON-LISP-USER|::|ROMANIAN-PROBLEM| 1.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
    |SYSTEM|::|DEFSTRUCT-WRITER|
    (|COMMON-LISP|::|FUNCTION|
     (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-GOAL|)
     (|COMMON-LISP|::|T| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM|)
     |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-GOAL|))
    #.(|SYSTEM|::|GET-SETF-SYMBOL|
       '|COMMON-LISP-USER|::|ROMANIAN-PROBLEM-GOAL|)
    ((|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       #4=(|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-GOAL|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-GOAL|
      (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP-USER|::|ROMANIAN-PROBLEM|
       |SYSTEM|::|OBJECT| 2. |SYSTEM|::|VALUE|)))
    #Y(#4# #18Y(00 00 00 00 02 00 00 00 20 03 DA AE DB B1 32 44 19 03)
       (|COMMON-LISP-USER|::|ROMANIAN-PROBLEM| 2.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
    (|COMMON-LISP|::|FUNCTION|
     (|COMMON-LISP|::|SETF|
      |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-NUM-EXPANDED|)
     (|COMMON-LISP|::|T| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM|)
     |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     (|COMMON-LISP|::|SETF|
      |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-NUM-EXPANDED|))
    #.(|SYSTEM|::|GET-SETF-SYMBOL|
       '|COMMON-LISP-USER|::|ROMANIAN-PROBLEM-NUM-EXPANDED|)
    ((|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       #5=(|COMMON-LISP|::|SETF|
           |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-NUM-EXPANDED|)))
     (|COMMON-LISP|::|BLOCK|
      |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-NUM-EXPANDED|
      (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP-USER|::|ROMANIAN-PROBLEM|
       |SYSTEM|::|OBJECT| 3. |SYSTEM|::|VALUE|)))
    #Y(#5# #18Y(00 00 00 00 02 00 00 00 20 03 DA AE DB B1 32 44 19 03)
       (|COMMON-LISP-USER|::|ROMANIAN-PROBLEM| 3.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
    (|COMMON-LISP|::|FUNCTION|
     (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-ITERATIVE?|)
     (|COMMON-LISP|::|T| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM|)
     |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-ITERATIVE?|))
    #.(|SYSTEM|::|GET-SETF-SYMBOL|
       '|COMMON-LISP-USER|::|ROMANIAN-PROBLEM-ITERATIVE?|)
    ((|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       #6=(|COMMON-LISP|::|SETF|
           |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-ITERATIVE?|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-ITERATIVE?|
      (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP-USER|::|ROMANIAN-PROBLEM|
       |SYSTEM|::|OBJECT| 4. |SYSTEM|::|VALUE|)))
    #Y(#6# #18Y(00 00 00 00 02 00 00 00 20 03 DA AE DB B1 32 44 19 03)
       (|COMMON-LISP-USER|::|ROMANIAN-PROBLEM| 4.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
    (|COMMON-LISP|::|FUNCTION|
     (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-MAP|)
     (|COMMON-LISP|::|T| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM|)
     |COMMON-LISP|::|T|)
    (|COMMON-LISP|::|INLINE|
     (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-MAP|))
    #.(|SYSTEM|::|GET-SETF-SYMBOL| '|COMMON-LISP-USER|::|ROMANIAN-PROBLEM-MAP|)
    ((|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
     (|COMMON-LISP|::|DECLARE|
      (|SYSTEM|::|IN-DEFUN|
       #7=(|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-MAP|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|ROMANIAN-PROBLEM-MAP|
      (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP-USER|::|ROMANIAN-PROBLEM|
       |SYSTEM|::|OBJECT| 5. |SYSTEM|::|VALUE|)))
    #Y(#7# #18Y(00 00 00 00 02 00 00 00 20 03 DA AE DB B1 32 44 19 03)
       (|COMMON-LISP-USER|::|ROMANIAN-PROBLEM| 5.)
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
    |COMMON-LISP|::|TYPE|
    "A route-finding problem on the Romania map, with random start and goal."
    |SYSTEM|::|%SET-DOCUMENTATION| |CLOS|::|PRINT-OBJECT|
    |SYSTEM|::|TRACED-DEFINITION| |SYSTEM|::|UNTRACE1|
    #Y(#:|131 135 (DEFSTRUCTURE (ROMANIAN-PROBLEM #) "A route-finding problem on the Romania map, with random start and goal.")-13-2-1|
       #15Y(00 00 00 00 01 00 00 00 20 02 DA C6 5D 19 02)
       (#Y(#:|131 135 (DEFSTRUCTURE (ROMANIAN-PROBLEM #) "A route-finding problem on the Romania map, with random start and goal.")-13-2-1-1|
           #16Y(00 00 00 00 02 00 00 00 20 03 AE AE 30 00 19 03)
           (|COMMON-LISP-USER|::|PRINT-STRUCTURE|)
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
        (|COMMON-LISP|::|T|))
       (|COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|))
    :|QUALIFIERS| :|LAMBDA-LIST| (|SYSTEM|::|STRUCT| |COMMON-LISP|::|STREAM|)
    |CLOS|::|SIGNATURE|
    #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
      |COMMON-LISP|::|NIL|)
    :|SPECIALIZERS| |CLOS|::|DO-DEFMETHOD|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
